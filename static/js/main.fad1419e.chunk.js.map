{"version":3,"sources":["util/data.js","Traverse.js","components/lsOutput/Directory.js","components/lsOutput/File.js","ListLs.js","components/Help.js","components/Pwd.js","Message.js","components/WelcomeText.js","App.js","index.js"],"names":["obj","type","value","about","info","contact","github","facebook","youtube","getNodeAtPath","path","reduce","acc","el","Traverse","Object","classCallCheck","this","home","prevPath","ans","data","success","pwd","code","concat","join","name","JSON","parse","stringify","pop","temp","newName","split","toConsumableArray","tempObj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","err","return","Directory","_ref","react_default","a","createElement","className","File","ListLs","props","keys","map","lsOutput_Directory","key","lsOutput_File","renderData","PureComponent","Help","Pwd","Message","command","ListLs_ListLs","components_Help","components_Pwd","WelcomeText","Fragment","traverse","getCurrentWorkingDirectory","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","commands","currentPath","handleChange","bind","assertThisInitialized","contentEditable","React","createRef","textInput","_this2","current","focus","setInterval","evt","test","target","handleEnterPress","setState","_this3","_this$state","commandOptions","lsresult","ls","cd","index","src_Message","toString","_this$state2","components_WelcomeText","renderCommands","react_contenteditable_default","autoCorrect","autoCapitalize","innerRef","html","disabled","onChange","tagName","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fad1419e.chunk.js","sourcesContent":["const obj = {\n  type: 'directory',\n  value: {\n    about: {\n      type: 'directory',\n      value: {\n        info: {\n          type: 'file',\n          value: 'Hi i am Stuart',\n        },\n      },\n    },\n    contact: {\n      type: 'directory',\n      value: {\n        github: {\n          type: 'directory',\n          value: 'gitlink',\n        },\n        facebook: {\n          type: 'file',\n          value: 'fblink',\n        },\n        youtube: {\n          type: 'file',\n          value: 'ytlink',\n        },\n      },\n    },\n    // work: '',\n    // projects: '',\n    // skills: '',\n  },\n\n};\n\nexport default obj;\n","import obj from './util/data';\n\nconst getNodeAtPath = path => path.reduce((acc, el) => obj.value[el], obj);\n\nclass Traverse {\n  constructor() {\n    this.home = obj;\n    this.prevPath = [];\n    this.path = [];\n  }\n\n  ls() {\n    const ans = getNodeAtPath(this.path);\n    if (ans.type === 'directory') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'LIST',\n      };\n    }\n    return {\n      data: this.pwd().data,\n      code: 'NOT_A_DIRECTORY',\n      success: false,\n      type: 'LIST',\n    };\n  }\n\n  cat() {\n    const ans = getNodeAtPath(this.path);\n    if (ans.type === 'file') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'CAT',\n      };\n    }\n    return {\n      data: this.pwd().data,\n      code: 'NOT_A_FILE',\n      success: false,\n      type: 'CAT',\n    };\n  }\n\n  pwd() {\n    return {\n      data: `~/${this.path.join('/')}`,\n      success: true,\n      type: 'PWD',\n    };\n  }\n\n  cd(name) {\n    if (name === '..') {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path.pop();\n    } else if (name === '.') {\n      // directory remains unchanged\n    } else if (name === '-') {\n      const temp = JSON.parse(JSON.stringify(this.prevPath));\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path = JSON.parse(JSON.stringify(temp));\n    } else {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      let newName = name;\n      newName = newName.split('/');\n      const ans = [...this.path, ...newName];\n      let tempObj = JSON.parse(JSON.stringify(this.home));\n      // eslint-disable-next-line\n      for (let i of ans) {\n        tempObj = tempObj.value[i];\n      }\n      if (tempObj.type === 'file') {\n        // console.log('cant cd to file');\n      } else {\n        this.path = [...this.path, ...newName];\n      }\n    }\n    return {};\n  }\n}\n\nexport default Traverse;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Directory = ({ data }) => (\n  <span className=\"directory-name\">\n    {data}\n  </span>\n);\n\nDirectory.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Directory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst File = ({ data }) => (\n  <span className=\"file-name\">\n    {data}\n  </span>\n);\n\nFile.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default File;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Directory from './components/lsOutput/Directory';\nimport File from './components/lsOutput/File';\n\nconst renderData = (data) => {\n  const keys = Object.keys(data);\n  return keys.reduce((acc, el) => [...acc, [el, data[el]]], []).map((el) => {\n    if (el[1].type === 'directory') {\n      return <Directory key={el[0]} data={`${el[0]} `} />;\n    }\n    return <File key={el[0]} data={`${el[0]} `} />;\n  });\n};\n\nexport default class ListLs extends PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <div>\n        {data && renderData(data.data)}\n      </div>\n    );\n  }\n}\nListLs.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n","import React from 'react';\n\nconst Help = () => (\n  <div>\n    <div>\n      <span>Use the following commands to navigate the app</span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n  </div>\n);\n\n\nexport default Help;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pwd = ({ data }) => (\n  <div>\n    {data}\n  </div>\n);\n\nPwd.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Pwd;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ListLs from './ListLs';\nimport Help from './components/Help';\nimport Pwd from './components/Pwd';\n\nconst renderCommandOutput = (type, data) => {\n  if (type === 'LIST') {\n    return <ListLs data={data} />;\n  }\n  if (type === 'HELP') {\n    return <Help />;\n  }\n  if (type === 'PWD') {\n    return <Pwd data={data.data} />;\n  }\n  return null;\n};\n\nclass Message extends PureComponent {\n  render() {\n    const { command } = this.props;\n    return (\n      <div>\n        <span className=\"shell\">\n          <b>\n            {`${command[2]} `}\n            $ &gt;\n          </b>\n        </span>\n        <span>\n          {command[1]}\n        </span>\n        {renderCommandOutput(command[0].type, command[0])}\n      </div>\n    );\n  }\n}\n\nMessage.propTypes = {\n  command: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Message;\n","import React from 'react';\n\nconst WelcomeText = () => (\n  <React.Fragment>\n    <div>\n      <span>\n        <span>Type</span>\n        <code>\n          help\n        </code>\n        <span>to get a help menu</span>\n      </span>\n    </div>\n  </React.Fragment>\n);\n\nexport default WelcomeText;\n","import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nimport './styles/App.css';\nimport Traverse from './Traverse';\nimport Message from './Message';\nimport WelcomeText from './components/WelcomeText';\n\nconst traverse = new Traverse();\n\nconst getCurrentWorkingDirectory = () => traverse.pwd().data;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      commands: [],\n      currentPath: getCurrentWorkingDirectory(),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 1000);\n  }\n\n  handleChange(evt) {\n    if (/<br>/.test(evt.target.value)) {\n      this.handleEnterPress();\n    }\n    this.setState({ command: evt.target.value });\n  }\n\n  handleEnterPress() {\n    const { command, commands } = this.state;\n    const commandOptions = command.split(' ');\n    let lsresult = [command, getCurrentWorkingDirectory()];\n\n    if (commandOptions[0] === 'clear') {\n      this.setState({\n        commands: [],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: getCurrentWorkingDirectory(),\n        });\n      });\n      return null;\n    }\n\n\n    if (commandOptions[0] === 'ls') {\n      lsresult = [traverse.ls(), ...lsresult];\n    } else if (commandOptions[0] === 'pwd') {\n      lsresult = [traverse.pwd(), ...lsresult];\n    } else if (commandOptions[0] === 'cd') {\n      lsresult = [traverse.cd(commandOptions[1]), ...lsresult];\n    } else if (commandOptions[0] === 'help') {\n      lsresult = [{\n        data: 'User Needs Help',\n        success: true,\n        type: 'HELP',\n      }, ...lsresult];\n    }\n\n    this.setState({\n      commands: [...commands, lsresult],\n    }, () => {\n      this.setState({\n        command: '',\n        currentPath: getCurrentWorkingDirectory(),\n      });\n    });\n    return null;\n  }\n\n  renderCommands() {\n    const { commands } = this.state;\n    return commands.map((el, index) => <Message key={index.toString()} command={el} />);\n  }\n\n  render() {\n    const { currentPath, command } = this.state;\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <React.Fragment>\n\n          <span className=\"shell\">\n            <b>\n              {`${currentPath} `}\n              $ &gt;\n            </b>\n          </span>\n\n          <ContentEditable\n            className=\"test\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            innerRef={this.contentEditable}\n            html={command} // innerHTML of the editable div\n            disabled={false} // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            tagName=\"span\" // Use a custom HTML tag (uses a div by default)\n          />\n          <div className=\"cursor\" />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}