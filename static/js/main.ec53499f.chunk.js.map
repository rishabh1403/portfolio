{"version":3,"sources":["Traverse.js","components/lsOutput/Directory.js","components/lsOutput/File.js","ListLs.js","components/Help.js","Message.js","components/WelcomeText.js","App.js","index.js"],"names":["Traverse","Object","classCallCheck","this","home","type","value","about","info","contact","github","facebook","youtube","prevPath","path","console","log","ans","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","err","return","data","success","obj","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","join","name","JSON","parse","stringify","pop","temp","split","concat","toConsumableArray","tempObj","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Directory","_ref","react_default","a","createElement","className","File","keys","reduce","acc","el","map","lsOutput_Directory","lsOutput_File","props","renderData","Component","Help","Message","ListLs_default","components_Help","command","renderCommandOutput","WelcomeText","Fragment","traverse","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","commands","html","currentPath","pwd","handleChange","bind","assertThisInitialized","contentEditable","React","createRef","textInput","_this2","current","focus","setInterval","evt","test","target","handleEnterPress","setState","_this3","_this$state","commandOptions","lsresult","ls","cd","index","src_Message","key","toString","components_WelcomeText","renderCommands","react_contenteditable_default","autoCorrect","autoCapitalize","innerRef","disabled","onChange","tagName","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ec53499f.chunk.js","sourcesContent":["class Traverse {\n  constructor() {\n    this.home = {\n      type: 'directory',\n      value: {\n        about: {\n          type: 'directory',\n          value: {\n            info: {\n              type: 'file',\n              value: 'Hi i am Stuart',\n            },\n          },\n        },\n        contact: {\n          type: 'directory',\n          value: {\n            github: {\n              type: 'directory',\n              value: 'gitlink',\n            },\n            facebook: {\n              type: 'file',\n              value: 'fblink',\n            },\n            youtube: {\n              type: 'file',\n              value: 'ytlink',\n            },\n          },\n        },\n        // work: '',\n        // projects: '',\n        // skills: '',\n      },\n\n    };\n    this.prevPath = [];\n    this.path = [];\n  }\n\n  ls() {\n    console.log(this.path);\n    let ans = this.home;\n    for (let i of this.path) {\n      ans = ans.value[i];\n    }\n    if (ans.type === 'directory') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'LIST',\n      };\n    } else {\n      return 'Not a directory';\n    }\n  }\n\n  cat() {\n    let ans = this.obj;\n    for (let i of this.path) {\n      ans = ans.value[i];\n    }\n    if (ans.type === 'file') {\n      console.log(ans.value);\n    } else {\n      console.log('cant cat a dir');\n    }\n\n  }\n\n  pwd() {\n    return '~/' + this.path.join('/');\n  }\n\n  cd(name) {\n    if (name === '..') {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path.pop();\n    } else if (name === '.') {\n      // directory remains unchanged\n    } else if (name === '-') {\n      const temp = JSON.parse(JSON.stringify(this.prevPath));\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path = JSON.parse(JSON.stringify(temp));\n    } else {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      name = name.split('/');\n      let ans = [...this.path, ...name];\n      let tempObj = JSON.parse(JSON.stringify(this.home))\n      for (let i of ans) {\n        tempObj = tempObj.value[i];\n      }\n      if (tempObj.type === 'file') {\n        console.log('cant cd to file');\n      } else {\n        this.path = [...this.path, ...name]\n      }\n    }\n    return {};\n  }\n\n}\n\n\n/*\n\n\nfunction traverse() {\n    let obj = {\n        type: 'directory',\n        value: {\n            about: {\n                type: 'directory',\n                value: {\n                    info: {\n                        type: 'file',\n                        value: 'Hi i am Stuart'\n                    },\n                }\n            },\n            contact: {\n                type: 'directory',\n                value: {\n                    github: {\n                        type: 'directory',\n                        value: 'gitlink'\n                    },\n                    facebook: {\n                        type: 'file',\n                        value: 'fblink'\n                    },\n                    youtube: {\n                        type: 'file',\n                        value: 'ytlink'\n                    }\n                }\n            },\n            work: '',\n            projects: '',\n            skills: ''\n        }\n\n    }\n    let prevPath = [];\n    let path = [];\n    return {\n        ls() {\n            let ans = obj;\n            for (let i of path) {\n                ans = ans.value[i];\n            }\n            if (ans.type === 'directory') {\n                console.log(ans.value)\n            } else {\n                console.log('Not a directory');\n            }\n\n        },\n        cat() {\n            let ans = obj;\n            for (let i of path) {\n                ans = ans.value[i];\n            }\n            if (ans.type === 'file') {\n                console.log(ans.value)\n            } else {\n                console.log('cant cat a dir');\n            }\n\n        },\n        pwd() {\n            console.log('~/' + path.join('/'));\n        },\n        cd(name) {\n            if (name === '..') {\n                prevPath = JSON.parse(JSON.stringify(path));\n                path.pop();\n            } else if (name === '.') {\n                // directory remains unchanged\n            } else if (name === '-') {\n                let temp = JSON.parse(JSON.stringify(prevPath));\n                prevPath = JSON.parse(JSON.stringify(path));\n                path = JSON.parse(JSON.stringify(temp));\n            } else {\n                prevPath = JSON.parse(JSON.stringify(path));\n                name = name.split('/');\n                let ans = [...path, ...name];\n                let tempObj = JSON.parse(JSON.stringify(obj))\n                for (let i of ans) {\n                    tempObj = tempObj.value[i];\n                }\n                if (tempObj.type === 'file') {\n                    console.log('cant cd to file');\n                } else {\n                    path = [...path, ...name]\n                }\n\n\n            }\n\n        }\n    }\n}\n\nlet temp = traverse();\ntemp.cd('contact/github')\ntemp.ls();\ntemp.pwd();\ntemp.cd('..')\ntemp.ls();\ntemp.pwd();\n// temp.cd('info');\n// temp.pwd();\n// temp.cat();\n\n\n/*\nIn CD\n    check for valid path\n    check for ... or other chars\n    after split check if obj returns anythig,,,, else throw error\n    handle trailing slash\n    handle ../xyz\n    \n\nIn OBJ\n    define structre\n        type - directory/ link / file\n        value- actual value\n\nIn ls\n    -a - add fun\n\n*/\n\nexport default Traverse;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Directory = ({ data }) => (\n  <span className=\"directory-name\">\n    {data}\n  </span>\n);\n\nDirectory.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Directory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst File = ({ data }) => (\n  <span className=\"file-name\">\n    {data}\n  </span>\n);\n\nFile.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default File;\n","import React, { Component } from 'react';\nimport Directory from './components/lsOutput/Directory';\nimport File from './components/lsOutput/File';\n\nexport default class extends Component {\n\n  renderData(data) {\n    let keys = Object.keys(data);\n    return keys.reduce((acc, el) => {\n      return [...acc, [el, data[el]]]\n    }, []).map(el => {\n      if (el[1].type === 'directory') {\n        return <Directory data={el[0] + \" \"} />\n      }else{\n        return <File data={el[0] + \" \"} />\n      }\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.data && this.renderData(this.props.data.data)}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Help = () => (\n  <div>\n    <div>\n      <span>Use the following commands to navigate the app</span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n  </div>\n);\n\n\nexport default Help;\n","import React, { Component } from 'react';\nimport ListLs from './ListLs';\nimport Help from './components/Help';\n\nclass Message extends Component {\n  // eslint-disable-next-line class-methods-use-this\n  renderCommandOutput(type, data) {\n    if (type === 'LIST') {\n      return <ListLs data={data} />;\n    }\n    if (type === 'HELP') {\n      return <Help />;\n    }\n    return null;\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <span className=\"shell\"><b>{this.props.command[2] + ' '}$ ></b></span><span>{this.props.command[1]}</span>\n        {this.renderCommandOutput(this.props.command[0].type, this.props.command[0])}\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React from 'react';\n\nconst WelcomeText = () => (\n  <React.Fragment>\n    <div>\n      <span>\n        <span>Type</span>\n        <code>\n          help\n        </code>\n        <span>to get a help menu</span>\n      </span>\n    </div>\n  </React.Fragment>\n);\n\n\nexport default WelcomeText;\n\n","import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nimport './styles/App.css';\nimport Traverse from './Traverse';\nimport Message from './Message';\nimport WelcomeText from './components/WelcomeText';\n\nconst traverse = new Traverse();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      commands: [],\n      html: '',\n      currentPath: traverse.pwd(),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 1000);\n  }\n\n  handleChange(evt) {\n    if (/<br>/.test(evt.target.value)) {\n      this.handleEnterPress();\n    }\n    this.setState({ command: evt.target.value });\n  }\n\n  handleEnterPress() {\n    const { command, commands } = this.state;\n    const commandOptions = command.split(' ');\n    let lsresult = [command, traverse.pwd()];\n\n    if (commandOptions[0] === 'clear') {\n      this.setState({\n        commands: [],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: traverse.pwd(),\n        });\n      });\n      return null;\n    }\n\n\n    if (commandOptions[0] === 'ls') {\n      lsresult = [traverse.ls(), ...lsresult];\n    } else if (commandOptions[0] === 'cd') {\n      lsresult = [traverse.cd(commandOptions[1]), ...lsresult];\n    } else if (commandOptions[0] === 'help') {\n      lsresult = [{\n        data: 'User Needs Help',\n        success: true,\n        type: 'HELP',\n      }, ...lsresult];\n    }\n\n    this.setState({\n      commands: [...commands, lsresult],\n    }, () => {\n      this.setState({\n        command: '',\n        currentPath: traverse.pwd(),\n      });\n    });\n    return null;\n  }\n\n  renderCommands() {\n    const { commands } = this.state;\n    return commands.map((el, index) => {\n      // const lsresult = Object.keys(traverse.ls()).toString();\n\n      return <Message key={index.toString()} command={el} />;\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <React.Fragment>\n\n          <span className=\"shell\"><b>{this.state.currentPath + ' '}$ ></b></span>\n\n          <ContentEditable\n            className=\"test\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            innerRef={this.contentEditable}\n            html={this.state.command} // innerHTML of the editable div\n            disabled={false}       // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            tagName='span' // Use a custom HTML tag (uses a div by default)\n          />\n          <div className=\"cursor\" />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}