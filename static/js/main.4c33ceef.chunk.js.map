{"version":3,"sources":["util/data.js","Traverse.js","components/lsOutput/Directory.js","components/lsOutput/File.js","ListLs.js","components/Help.js","components/Pwd.js","Error.js","Message.js","components/WelcomeText.js","App.js","index.js"],"names":["obj","type","value","about","info","contact","github","facebook","youtube","Traverse","Object","classCallCheck","this","home","prevPath","path","ans","reduce","acc","el","data","success","pwd","code","name","newName","split","newPath","concat","toConsumableArray","tempObj","JSON","parse","stringify","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","err","return","console","log","join","length","temp","pop","cdPath","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","push","Directory","_ref","react_default","a","createElement","className","File","ListLs","props","keys","map","lsOutput_Directory","key","lsOutput_File","renderData","PureComponent","Help","Pwd","Error","Message","command","ListLs_ListLs","components_Help","components_Pwd","src_Error","WelcomeText","Fragment","traverse","getCurrentWorkingDirectory","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","commands","currentPath","handleChange","bind","assertThisInitialized","contentEditable","React","createRef","textInput","_this2","current","focus","setInterval","evt","test","target","handleEnterPress","setState","_this3","_this$state","commandOptions","lsresult","ls","cd","cat","index","src_Message","toString","_this$state2","components_WelcomeText","renderCommands","react_contenteditable_default","autoCorrect","autoCapitalize","innerRef","html","disabled","onChange","tagName","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4c33ceef.chunk.js","sourcesContent":["const obj = {\n  type: 'directory',\n  value: {\n    about: {\n      type: 'directory',\n      value: {\n        info: {\n          type: 'file',\n          value: 'Hi i am Stuart',\n        },\n      },\n    },\n    contact: {\n      type: 'directory',\n      value: {\n        github: {\n          type: 'directory',\n          value: 'gitlink',\n        },\n        facebook: {\n          type: 'file',\n          value: 'fblink',\n        },\n        youtube: {\n          type: 'file',\n          value: 'ytlink',\n        },\n      },\n    },\n    // work: '',\n    // projects: '',\n    // skills: '',\n  },\n\n};\n\nexport default obj;\n","/* eslint-disable */\n\nimport obj from './util/data';\n\nconst getNodeAtPath = path => path.reduce((acc, el) => obj.value[el], obj);\n\nclass Traverse {\n  constructor() {\n    this.home = obj;\n    this.prevPath = [];\n    this.path = [];\n  }\n\n  ls() {\n    const ans = getNodeAtPath(this.path);\n    if (ans.type === 'directory') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'LIST',\n      };\n    }\n    return {\n      data: this.pwd().data,\n      code: 'NOT_A_DIRECTORY',\n      success: false,\n      type: 'LIST',\n    };\n  }\n\n  cat(name) {\n    if (!name) {\n      return {\n        data: this.pwd().data,\n        code: 'PATH_REQUIRED',\n        success: false,\n        type: 'CAT',\n      };\n    }\n    let newName = name.split('/');\n    let newPath = [...this.path, ...newName];\n    let tempObj = JSON.parse(JSON.stringify(this.home));\n    for (let i of newPath) {\n      tempObj = tempObj.value[i];\n      if (!tempObj) {\n        return {\n          data: name,\n          code: 'INVALID_PATH',\n          success: false,\n          type: 'CAT',\n        };\n      }\n    }\n    if (tempObj.type === 'directory') {\n      return {\n        data: name,\n        code: 'NOT_A_FILE',\n        success: false,\n        type: 'CAT',\n      };\n    }\n    console.log(tempObj);\n    return {\n      data: tempObj.value,\n      success: true,\n      type: 'CAT',\n    };\n\n  }\n\n  pwd() {\n    return {\n      data: `~/${this.path.join('/')}`,\n      success: true,\n      type: 'PWD',\n    };\n  }\n\n  cd(name) {\n    if (!name || name.length === 0) {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path = [];\n      return {};\n    }\n    if (name === '-') {\n      const temp = JSON.parse(JSON.stringify(this.prevPath));\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path = JSON.parse(JSON.stringify(temp));\n      return {\n        data: `~/${this.path.join('/')}`,\n        success: true,\n        type: 'PWD',\n      };\n    }\n\n    if (name === '..') {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path.pop();\n      return {};\n    }\n\n    const cdPath = name.split('/');\n    console.log(cdPath);\n    let ans = [];\n    if (cdPath[cdPath.length - 1] && cdPath[cdPath.length - 1].length > 0) {\n      ans = [...this.path, ...cdPath];\n    } else {\n      cdPath.pop();\n      ans = [...this.path, ...cdPath];\n    }\n    console.log(ans);\n    let tempObj = JSON.parse(JSON.stringify(this.home));\n    let prevObj = [];\n    // eslint-disable-next-line\n    for (let i of ans) {\n      if (i === '-') {\n        console.log(\"minus in between path\")\n        return {};\n      }\n      if (i === '.') {\n        return {};\n      }\n      if (i === '..') {\n        console.log(\"not supported\")\n        return {};\n        // console.log(\"coming here\");\n        // tempObj = prevObj.pop();\n        // console.log(tempObj);\n      }\n      // prevObj.push({ ...tempObj });\n      tempObj = tempObj.value[i];\n      if (!tempObj) {\n        console.log(\"Invalid Path\", name);\n        return {};\n      }\n      if (tempObj.type === 'file') {\n        console.log(\"cant go in file\", name);\n        return {};\n      }\n\n\n    }\n    // ans = ans.filter(el => el !== '.')\n    // if (ans.length === 1 && ans[0] === '..') {\n    //   this.path.pop();\n    //   return {};\n    // }\n    // let modifiedAns = [];\n    // for (let i = 1; i < ans.length; i += 1) {\n    //   if(ans[i] !== '..' && ans[i-1] !==)\n    // }\n\n    for (let i of ans) {\n      if (i !== '.' && i !== '..') {\n        this.path.push(i);\n      }\n    }\n    /*\n    if (name === '..') {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path.pop();\n    } else if (name === '.') {\n      // directory remains unchanged\n    } else if (name === '-') {\n      const temp = JSON.parse(JSON.stringify(this.prevPath));\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path = JSON.parse(JSON.stringify(temp));\n    } else {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      let newName = name;\n      newName = newName.split('/');\n      const ans = [...this.path, ...newName];\n      let tempObj = JSON.parse(JSON.stringify(this.home));\n      // eslint-disable-next-line\n      for (let i of ans) {\n        tempObj = tempObj.value[i];\n      }\n      if (tempObj.type === 'file') {\n        // console.log('cant cd to file');\n      } else {\n        this.path = [...this.path, ...newName];\n      }\n    }\n    */\n    return {};\n\n\n  }\n}\n\nexport default Traverse;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Directory = ({ data }) => (\n  <span className=\"directory-name\">\n    {data}\n  </span>\n);\n\nDirectory.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Directory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst File = ({ data }) => (\n  <span className=\"file-name\">\n    {data}\n  </span>\n);\n\nFile.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default File;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Directory from './components/lsOutput/Directory';\nimport File from './components/lsOutput/File';\n\nconst renderData = (data) => {\n  const keys = Object.keys(data);\n  return keys.reduce((acc, el) => [...acc, [el, data[el]]], []).map((el) => {\n    if (el[1].type === 'directory') {\n      return <Directory key={el[0]} data={`${el[0]} `} />;\n    }\n    return <File key={el[0]} data={`${el[0]} `} />;\n  });\n};\n\nexport default class ListLs extends PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <div>\n        {data && renderData(data.data)}\n      </div>\n    );\n  }\n}\nListLs.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n","import React from 'react';\n\nconst Help = () => (\n  <div>\n    <div>\n      <span>Use the following commands to navigate the app</span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>cd &lt;directory name&gt;</code>\n        <span>- to change directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>clear</code>\n        <span>- to clear your console</span>\n      </span>\n    </div>\n  </div>\n);\n\n\nexport default Help;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pwd = ({ data }) => (\n  <div>\n    {data}\n  </div>\n);\n\nPwd.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Pwd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ data }) => {\n  if (data.type === 'LIST') {\n    if (data.code === 'NOT_A_DIRECTORY') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is not directory, try using\n          <code>\n            cat &lt;file name&gt;\n          </code>\n          to view the contents\n        </div>\n      );\n    }\n  }\n  if (data.type === 'CAT') {\n    if (data.code === 'NOT_A_FILE') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is directory, try using\n          <code>\n            ls\n          </code>\n          inside the directory to view contents\n        </div>\n      );\n    }\n    if (data.code === 'PATH_REQUIRED') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            cat\n          </code>\n          command requires a file name to read the content\n          <code>\n            cat &lt;file name&gt;\n          </code>\n        </div>\n      );\n    }\n    if (data.code === 'INVALID_PATH') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          is an invalid file path\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nError.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n\nexport default Error;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ListLs from './ListLs';\nimport Help from './components/Help';\nimport Pwd from './components/Pwd';\nimport Error from './Error';\n\nconst renderCommandOutput = (success, type, data) => {\n  if (!success) {\n    return <Error data={data} />;\n  }\n  if (type === 'LIST') {\n    return <ListLs data={data} />;\n  }\n  if (type === 'HELP') {\n    return <Help />;\n  }\n  if (type === 'PWD') {\n    return <Pwd data={data.data} />;\n  }\n  return null;\n};\n\nclass Message extends PureComponent {\n  render() {\n    const { command } = this.props;\n    return (\n      <div>\n        <span className=\"shell\">\n          <b>\n            {`${command[2]} `}\n            $ &gt;\n          </b>\n        </span>\n        <span>\n          {command[1]}\n        </span>\n        {renderCommandOutput(command[0].success, command[0].type, command[0])}\n      </div>\n    );\n  }\n}\n\nMessage.propTypes = {\n  command: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Message;\n","import React from 'react';\n\nconst WelcomeText = () => (\n  <React.Fragment>\n    <div>\n      <span>\n        <span>Type</span>\n        <code>\n          help\n        </code>\n        <span>to get a help menu</span>\n      </span>\n    </div>\n  </React.Fragment>\n);\n\nexport default WelcomeText;\n","import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nimport './styles/App.css';\nimport Traverse from './Traverse';\nimport Message from './Message';\nimport WelcomeText from './components/WelcomeText';\n\nconst traverse = new Traverse();\n\nconst getCurrentWorkingDirectory = () => traverse.pwd().data;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      commands: [],\n      currentPath: getCurrentWorkingDirectory(),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 100);\n  }\n\n  handleChange(evt) {\n    if (/<br>/.test(evt.target.value)) {\n      this.handleEnterPress();\n    }\n    this.setState({ command: evt.target.value });\n  }\n\n  handleEnterPress() {\n    const { command, commands } = this.state;\n    const commandOptions = command.split(' ');\n    let lsresult = [command, getCurrentWorkingDirectory()];\n\n    if (commandOptions[0] === 'clear') {\n      this.setState({\n        commands: [],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: getCurrentWorkingDirectory(),\n        });\n      });\n      return null;\n    }\n\n\n    if (commandOptions[0] === 'ls') {\n      lsresult = [traverse.ls(), ...lsresult];\n    } else if (commandOptions[0] === 'pwd') {\n      lsresult = [traverse.pwd(), ...lsresult];\n    } else if (commandOptions[0] === 'cd') {\n      lsresult = [traverse.cd(commandOptions[1]), ...lsresult];\n    } else if (commandOptions[0] === 'help') {\n      lsresult = [{\n        data: 'User Needs Help',\n        success: true,\n        type: 'HELP',\n      }, ...lsresult];\n    } else if (commandOptions[0] === 'cat') {\n      lsresult = [traverse.cat(commandOptions[1]), ...lsresult];\n    }\n\n    this.setState({\n      commands: [...commands, lsresult],\n    }, () => {\n      this.setState({\n        command: '',\n        currentPath: getCurrentWorkingDirectory(),\n      });\n    });\n    return null;\n  }\n\n  renderCommands() {\n    const { commands } = this.state;\n    return commands.map((el, index) => <Message key={index.toString()} command={el} />);\n  }\n\n  render() {\n    const { currentPath, command } = this.state;\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <React.Fragment>\n\n          <span className=\"shell\">\n            <b>\n              {`${currentPath} `}\n              $ &gt;\n            </b>\n          </span>\n\n          <ContentEditable\n            className=\"test\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            innerRef={this.contentEditable}\n            html={command} // innerHTML of the editable div\n            disabled={false} // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            tagName=\"span\" // Use a custom HTML tag (uses a div by default)\n          />\n          <div className=\"cursor\" />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}