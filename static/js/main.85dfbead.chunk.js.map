{"version":3,"sources":["util/util.js","commands.js","components/lsOutput/Directory.js","components/lsOutput/File.js","components/lsOutput/OuterLinks.js","ListLs.js","components/Help.js","components/Pwd.js","components/Cat.js","Error.js","components/ShellPrompt.js","Message.js","components/WelcomeText.js","util/data.js","App.js","index.js"],"names":["sendResponse","success","type","code","data","sendError","sendSuccess","sendLsError","sendLsInvalidPathError","sendLsNotADirectoryError","sendLsSuccess","sendPwdSuccess","sendHelpSuccess","sendCatError","sendCatInvalidPathError","sendCatIsDirectoryError","sendCatPathRequiredError","sendCatSuccess","sendCdInvalidPathError","sendCdError","getNodeAtPath","path","obj","reduce","acc","el","value","not","cond","noArgs","args","length","match","recieved","expected","sanitizeInput","input","replace","trim","split","map","checkIfEveryNodeIsDirectoryExceptLastNode","tempObj","Object","esm_extends","tempPath","toConsumableArray","pop","every","lsLastNodeInPath","pwd","lastNode","getAbsolutePath","option","absolutePath","shift","concat","setCaretToEnd","id","document","getElementById","range","createRange","sel","window","getSelection","setStart","childNodes","collapse","removeAllRanges","addRange","join","ls","cat","ans","catLastNodeInPath","cd","name","previousPath","isPath","temp","console","log","checkIfEveryNodeIsDirectory","objectSpread","Directory","_ref","react_default","a","createElement","className","File","OuterLinks","contents","email","href","ListLs","this","props","keys","lsOutput_Directory","key","lsOutput_File","lsOutput_OuterLinks","renderData","PureComponent","Help","Pwd","Cat","Error","ShellPrompt","Message","command","components_ShellPrompt","ListLs_ListLs","components_Help","components_Pwd","components_Cat","src_Error","WelcomeText","Fragment","about","info.txt","credits","thanks.txt","contact","blog.sh","email.sh","github.sh","twitter.sh","youtube.sh","skills","javascript","Html","css","React","Node","work","Mappes","stack","Aikaan","Tricog","Sportzify","index","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","home","oldCommands","presentWorkingDirectory","comm","handleChange","bind","assertThisInitialized","handleKeyDown","contentEditable","createRef","textInput","_this2","current","focus","setInterval","evt","setState","target","e","keyCode","preventDefault","handleTabPress","handleEnterPress","handleUpArrowPress","_this$state","commandArray","filter","startsWith","getRecommendation","_this3","output","newOutput","updateStateWithCommandResults","_this4","cdResult","_this$state2","isCommand","handleNoArgs","handleClearCommand","handleLsCommand","handlePwdCommand","handleHelpCommand","handleCatCommand","handleCdCommand","idx","src_Message","toString","_this$state3","components_WelcomeText","renderCommands","react_contenteditable_default","tabIndex","autoCorrect","autoCapitalize","innerRef","html","disabled","onChange","onKeyDown","tagName","Component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.85dfbead.chunk.js","sourcesContent":["const sendResponse = success => type => code => data => ({\n  success,\n  type,\n  code,\n  data,\n});\n\nconst sendError = sendResponse(false);\nconst sendSuccess = sendResponse(true);\n\n// ls curry\nconst sendLsError = sendError('LIST');\nexport const sendLsInvalidPathError = sendLsError('INVALID_PATH');\nexport const sendLsNotADirectoryError = sendLsError('NOT_A_DIRECTORY');\nexport const sendLsSuccess = sendSuccess('LIST')();\n\n// pwd curry\nexport const sendPwdSuccess = sendSuccess('PWD')();\n\n// help curry\nexport const sendHelpSuccess = sendSuccess('HELP')();\n\n// cat curry :P\nconst sendCatError = sendError('CAT');\nexport const sendCatInvalidPathError = sendCatError('INVALID_PATH');\nexport const sendCatIsDirectoryError = sendCatError('IS_DIRECTORY');\nexport const sendCatPathRequiredError = sendCatError('PATH_REQUIRED');\nexport const sendCatSuccess = sendSuccess('CAT')();\n\n// cd curry :P\nconst sendCdError = sendError('CD');\nexport const sendCdInvalidPathError = sendCdError('INVALID_PATH');\n// export const sendCatIsDirectoryError = sendCatError('IS_DIRECTORY');\n// export const sendCatPathRequiredError = sendCatError('PATH_REQUIRED');\n// export const sendCatSuccess = sendSuccess('CAT')();\n\nexport const getNodeAtPath = (path, obj) => path.reduce((acc, el) => acc.value[el], obj);\n\nexport const not = cond => !cond;\nexport const noArgs = args => not(args) || args.length === 0;\nexport const match = recieved => expected => recieved === expected;\n// export const commandIsClear = command => command === 'clear';\nexport const sanitizeInput = input => input.replace('&nbsp;', '').trim().split(' ').map(el => el.replace('&nbsp;', ''));\n\nexport const checkIfEveryNodeIsDirectoryExceptLastNode = (path, obj) => {\n  let { ...tempObj } = obj;\n  if (path.length <= 1) {\n    return true;\n  }\n  const tempPath = [...path];\n  tempPath.pop();\n  return tempPath.every((el) => {\n    tempObj = tempObj.value[el];\n    return tempObj && tempObj.type === 'directory';\n  });\n};\n\nexport const checkIfEveryNodeIsDirectory = (path, obj) => {\n  let { ...tempObj } = obj;\n  if (path.length < 1) {\n    return true;\n  }\n  return path.every((el) => {\n    tempObj = tempObj.value[el];\n    return tempObj && tempObj.type === 'directory';\n  });\n};\n\nexport const getRecommendation = (name, data, path) => {\n  let tempObj = { ...data };\n  tempObj = path.reduce((acc, el) => acc.value[el], tempObj);\n  if (typeof tempObj.value === 'object') {\n    return Object.keys(tempObj.value).filter(el => el.startsWith(name))[0];\n  }\n  return [];\n};\n\nexport const lsLastNodeInPath = (path, data, pwd) => {\n  const lastNode = getNodeAtPath(path, data);\n  if (!lastNode) {\n    return sendLsInvalidPathError(pwd(path).data);\n  }\n  if (lastNode.type === 'directory') {\n    return sendLsSuccess(lastNode.value);\n  }\n  return sendLsNotADirectoryError(pwd(path).data);\n};\n\nexport const catLastNodeInPath = (path, data, pwd) => {\n  const ans = getNodeAtPath(path, data);\n  if (!ans) {\n    return sendCatInvalidPathError(pwd(path).data);\n  }\n  if (ans.type !== 'directory') {\n    return sendCatSuccess(ans.value);\n  }\n  return sendCatIsDirectoryError(pwd(path).data);\n};\n\nexport const getAbsolutePath = (option, path) => {\n  const tempPath = option.split('/');\n  if (tempPath[tempPath.length - 1].length === 0) {\n    tempPath.pop(); // handle trailing slash\n  }\n  let absolutePath = [];\n  if (tempPath[0] === '~' || tempPath[0].length === 0) {\n    absolutePath = [...tempPath];\n    absolutePath.shift();\n  } else {\n    absolutePath = [...path, ...tempPath];\n  }\n  return absolutePath;\n};\n\nexport const setCaretToEnd = (id) => {\n  const el = document.getElementById(id);\n  const range = document.createRange();\n  const sel = window.getSelection();\n  range.setStart(el.childNodes[0], el.childNodes[0].length);\n  range.collapse(true);\n  sel.removeAllRanges();\n  sel.addRange(range);\n};\n","/* eslint-disable */\nimport {\n  getNodeAtPath,\n  checkIfEveryNodeIsDirectoryExceptLastNode,\n  sendLsSuccess,\n  sendLsInvalidPathError,\n  sendLsNotADirectoryError,\n  sendPwdSuccess,\n  sendHelpSuccess,\n  sendCatInvalidPathError,\n  sendCatIsDirectoryError,\n  sendCatPathRequiredError,\n  sendCatSuccess,\n  getAbsolutePath,\n  lsLastNodeInPath,\n  catLastNodeInPath,\n  not,\n  noArgs,\n  match,\n  sendCdInvalidPathError,\n  checkIfEveryNodeIsDirectory,\n} from './util/util';\n\nexport const pwd = (path) => sendPwdSuccess(`~/${path.join('/')}`);\n\nexport const help = () => sendHelpSuccess('User Needs Help');\n\nexport const ls = (path, data, option) => {\n\n  if (noArgs(option)) {\n    return lsLastNodeInPath(path, data, pwd);\n  }\n  const absolutePath = getAbsolutePath(option, path);\n  if (not(checkIfEveryNodeIsDirectoryExceptLastNode(absolutePath, data))) {\n    return sendLsInvalidPathError(pwd(absolutePath).data)\n  } else {\n    return lsLastNodeInPath(absolutePath, data, pwd);\n  }\n\n}\n\nexport const cat = (path, data, option) => {\n\n  if (noArgs(option)) {\n    return sendCatPathRequiredError(pwd(path).data)\n  }\n  const absolutePath = getAbsolutePath(option, path);\n  if (not(checkIfEveryNodeIsDirectoryExceptLastNode(absolutePath, data))) {\n    return sendCatInvalidPathError(pwd(absolutePath).data);\n  }\n  return catLastNodeInPath(absolutePath, data, pwd);\n\n}\n\nexport const cd = (name, path, previousPath, data) => {\n  if (noArgs(name)) {\n    previousPath = [...path];\n    path = [];\n    return {\n      previousPath,\n      path,\n    };\n  }\n  const isPath = match(name);\n  if (isPath('-')) {\n    const temp = [...previousPath];\n    previousPath = [...path];\n    path = [...temp];\n    console.log(previousPath);\n    console.log(path);\n    return {\n      data: `~/${path.join('/')}`,\n      success: true,\n      type: 'PWD',\n      previousPath,\n      path,\n    };\n  }\n  if (isPath('..')) {\n    previousPath = [...path];\n    path.pop();\n    return {\n      previousPath,\n      path,\n    };\n  }\n\n  if (isPath('.')) {\n    return {\n      previousPath,\n      path,\n    };\n  }\n\n  const absolutePath = getAbsolutePath(name, path);\n  if (not(checkIfEveryNodeIsDirectory(absolutePath, data))) {\n    return { ...sendCdInvalidPathError(pwd(absolutePath).data), previousPath, path };\n  }\n  return {\n    previousPath: [...path],\n    path: absolutePath,\n  };\n\n\n\n\n\n\n\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Directory = ({ data }) => (\n  <span className=\"directory-name\">\n    {data}\n  </span>\n);\n\nDirectory.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Directory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst File = ({ data }) => (\n  <span className=\"file-name\">\n    {data}\n  </span>\n);\n\nFile.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default File;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OuterLinks = ({ data, contents }) => {\n  if (contents.email) {\n    return (\n      <span className=\"link-name\">\n        <a href={`mailto:${contents.value}`}>{data}</a>\n      </span>\n    );\n  }\n  return (\n    <span className=\"link-name\">\n      <a href={contents.value}>{data}</a>\n    </span>\n  );\n};\n\nOuterLinks.propTypes = {\n  data: PropTypes.string.isRequired,\n  contents: PropTypes.shape().isRequired,\n};\n\nexport default OuterLinks;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Directory from './components/lsOutput/Directory';\nimport File from './components/lsOutput/File';\nimport OuterLinks from './components/lsOutput/OuterLinks';\n\nconst renderData = (data) => {\n  const keys = Object.keys(data);\n  return keys.reduce((acc, el) => [...acc, [el, data[el]]], []).map((el) => {\n    if (el[1].type === 'directory') {\n      return <Directory key={el[0]} data={`${el[0]} `} />;\n    }\n    if (el[1].type === 'file') {\n      return <File key={el[0]} data={`${el[0]} `} />;\n    }\n    return <OuterLinks key={el[0]} data={el[0]} contents={el[1]} />;\n  });\n};\n\nexport default class ListLs extends PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <div>\n        {data && renderData(data.data)}\n      </div>\n    );\n  }\n}\nListLs.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n","import React from 'react';\n\nconst Help = () => (\n  <div>\n    <div>\n      <span>Use the following commands to navigate the app</span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>cd &lt;directory name&gt;</code>\n        <span>- to change directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>cat &lt;file name&gt;</code>\n        <span>- to view contents of file</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>pwd</code>\n        <span>- to see current working directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>clear</code>\n        <span>- to clear your console</span>\n      </span>\n    </div>\n  </div>\n);\n\n\nexport default Help;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pwd = ({ data }) => (\n  <div>\n    {data}\n  </div>\n);\n\nPwd.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Pwd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cat = ({ data }) => (\n  <div>\n    {data}\n  </div>\n);\n\nCat.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Cat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ data }) => {\n  if (data.type === 'LIST') {\n    if (data.code === 'NOT_A_DIRECTORY') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is not directory, try using\n          <code>\n            cat &lt;file name&gt;\n          </code>\n          to view the contents\n        </div>\n      );\n    }\n    if (data.code === 'INVALID_PATH') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is not a valid path for a directory\n        </div>\n      );\n    }\n  }\n  if (data.type === 'CAT') {\n    if (data.code === 'IS_DIRECTORY') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is directory, try using\n          <code>\n            ls\n          </code>\n          inside the directory to view contents\n        </div>\n      );\n    }\n    if (data.code === 'PATH_REQUIRED') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            cat\n          </code>\n          command requires a file name to read the content\n          <code>\n            cat &lt;file name&gt;\n          </code>\n        </div>\n      );\n    }\n    if (data.code === 'INVALID_PATH') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          is an invalid path\n        </div>\n      );\n    }\n  }\n  if (data.type === 'CD') {\n    if (data.code === 'INVALID_PATH') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          is an invalid path, for a directory. Try using\n          <code>cat</code>\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nError.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShellPrompt = ({ path }) => (\n  <span className=\"shell\">\n    <b>\n      {`${path} `}\n      $ &gt;\n    </b>\n  </span>\n);\n\nShellPrompt.propTypes = {\n  path: PropTypes.string.isRequired,\n};\n\nexport default ShellPrompt;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ListLs from './ListLs';\nimport Help from './components/Help';\nimport Pwd from './components/Pwd';\nimport Cat from './components/Cat';\nimport Error from './Error';\nimport ShellPrompt from './components/ShellPrompt';\n\nconst renderCommandOutput = (success, type, data) => {\n  if (!success) {\n    return <Error data={data} />;\n  }\n  if (type === 'LIST') {\n    return <ListLs data={data} />;\n  }\n  if (type === 'HELP') {\n    return <Help />;\n  }\n  if (type === 'PWD') {\n    return <Pwd data={data.data} />;\n  }\n  if (type === 'CAT') {\n    return <Cat data={data.data} />;\n  }\n  return null;\n};\n\nclass Message extends PureComponent {\n  render() {\n    const { command } = this.props;\n    return (\n      <div>\n        <ShellPrompt path={command[2]} />\n        <span>\n          {command[1]}\n        </span>\n        {renderCommandOutput(command[0].success, command[0].type, command[0])}\n      </div>\n    );\n  }\n}\n\nMessage.propTypes = {\n  command: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Message;\n","import React from 'react';\n\nconst WelcomeText = () => (\n  <React.Fragment>\n    <div>\n      <span>\n        <span>Type</span>\n        <code>\n          help\n        </code>\n        <span>to get a help menu</span>\n      </span>\n    </div>\n  </React.Fragment>\n);\n\nexport default WelcomeText;\n","const obj = {\n  type: 'directory',\n  value: {\n    about: {\n      type: 'directory',\n      value: {\n        'info.txt': {\n          type: 'file',\n          value: `Hey there hacker, I am Rishabh, a software engineer from India.\n                   I am mostly passionate about web technologies, linux and everthing opensource`,\n        },\n        credits: {\n          type: 'directory',\n          value: {\n            'thanks.txt': {\n              type: 'file',\n              value: `Would like to take a moment to thank Nitin and Andrew for all their help \n              with extensive testing and code review `,\n            },\n          },\n        },\n      },\n    },\n    contact: {\n      type: 'directory',\n      value: {\n        'blog.sh': {\n          type: 'link',\n          value: 'https://rishabh1403.com/',\n        },\n        'email.sh': {\n          type: 'link',\n          email: true,\n          value: 'contact@rishabh1403.com',\n        },\n        'github.sh': {\n          type: 'link',\n          value: 'https://github.com/rishabh1403/',\n        },\n        'twitter.sh': {\n          type: 'link',\n          value: 'https://twitter.com/rishabhjain1403',\n        },\n        'youtube.sh': {\n          type: 'link',\n          value: 'https://www.youtube.com/rishabh1403',\n        },\n      },\n    },\n    skills: {\n      type: 'directory',\n      value: {\n        javascript: {\n          type: 'file',\n          value: '(Intermediate)',\n        },\n        Html: {\n          type: 'file',\n          value: '(Intermediate)',\n        },\n        css: {\n          type: 'file',\n          value: '(Intermediate)',\n        },\n        React: {\n          type: 'file',\n          value: '(Intermediate)',\n        },\n        Node: {\n          type: 'file',\n          value: '(Intermediate)',\n        },\n      },\n    },\n    work: {\n      type: 'directory',\n      value: {\n        Mappes: {\n          type: 'directory',\n          value: {\n            stack: {\n              type: 'file',\n              value: 'Node, React & DynamoDb',\n            },\n          },\n        },\n        Aikaan: {\n          type: 'directory',\n          value: {\n            stack: {\n              type: 'file',\n              value: 'Node, Golang, React & PostgreSql',\n            },\n          },\n        },\n        Tricog: {\n          type: 'directory',\n          value: {\n            stack: {\n              type: 'file',\n              value: 'Node, Angular & Sql',\n            },\n          },\n        },\n        Sportzify: {\n          type: 'directory',\n          value: {\n            stack: {\n              type: 'file',\n              value: 'Node, Jquery & MongoDb',\n            },\n          },\n        },\n      },\n    },\n    // projects: '',\n  },\n\n};\n\nexport default obj;\n","import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport './styles/App.css';\nimport {\n  getRecommendation,\n  match,\n  sanitizeInput,\n  setCaretToEnd,\n  noArgs,\n} from './util/util';\nimport * as comm from './commands';\nimport Message from './Message';\nimport ShellPrompt from './components/ShellPrompt';\nimport WelcomeText from './components/WelcomeText';\nimport obj from './util/data';\n\nlet index = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      home: obj,\n      path: [],\n      previousPath: [],\n      oldCommands: [],\n      presentWorkingDirectory: comm.pwd([]).data,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 100);\n    // eslint-disable-next-line\n    console.log(\"%cNitin Stop Looking At my console for errors, now you won't find any\", 'background: black; color: green; font-size: x-large');\n  }\n\n  handleChange(evt) {\n    this.setState({ command: evt.target.value });\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      this.handleTabPress();\n    }\n\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.handleEnterPress();\n    }\n\n    if (e.keyCode === 38) {\n      e.preventDefault();\n      this.handleUpArrowPress();\n    }\n  }\n\n  handleTabPress() {\n    const { command, home, path } = this.state;\n    const commandArray = command.split(' ');\n    const name = getRecommendation(commandArray[1], home, path);\n    if (name && name.length > 0) {\n      this.setState({\n        command: `${commandArray[0]} ${name}`,\n      }, () => {\n        setCaretToEnd('command-input');\n      });\n    }\n  }\n\n  handleUpArrowPress() {\n    index += 1;\n    const { oldCommands } = this.state;\n    if (oldCommands.length - index >= 0) {\n      this.setState({\n        command: oldCommands[oldCommands.length - index][1].trim(),\n      }, () => {\n        setCaretToEnd('command-input');\n      });\n    }\n  }\n\n  updateStateWithCommandResults(oldCommands, path) {\n    this.setState({\n      oldCommands,\n    }, () => {\n      this.setState({\n        command: '',\n        presentWorkingDirectory: comm.pwd(path).data,\n      });\n    });\n  }\n\n  handleNoArgs(oldCommands, output, path) {\n    const newOutput = [{}, ...output];\n    this.updateStateWithCommandResults([...oldCommands, newOutput], path);\n  }\n\n  handleClearCommand(path) {\n    this.updateStateWithCommandResults([], path);\n  }\n\n  handleLsCommand(path, home, option, output, oldCommands) {\n    const newOutput = [comm.ls(path, home, option), ...output];\n    this.updateStateWithCommandResults([...oldCommands, newOutput], path);\n  }\n\n  handlePwdCommand(path, output, oldCommands) {\n    const newOutput = [comm.pwd(path), ...output];\n    this.updateStateWithCommandResults([...oldCommands, newOutput], path);\n  }\n\n  handleHelpCommand(path, output, oldCommands) {\n    const newOutput = [comm.help(), ...output];\n    this.updateStateWithCommandResults([...oldCommands, newOutput], path);\n  }\n\n  handleCatCommand(path, home, option, output, oldCommands) {\n    const newOutput = [comm.cat(path, home, option), ...output];\n    this.updateStateWithCommandResults([...oldCommands, newOutput], path);\n  }\n\n  handleCdCommand(path, home, option, output, oldCommands, previousPath) {\n    const cdResult = comm.cd(option, path, previousPath, home);\n    const newOutput = [cdResult, ...output];\n    this.setState({\n      path: cdResult.path,\n      previousPath: cdResult.previousPath,\n    }, () => {\n      this.updateStateWithCommandResults([...oldCommands, newOutput], this.state.path); // eslint-disable-line\n    });\n  }\n\n  handleEnterPress() {\n    index = 0;\n    const\n      {\n        command,\n        oldCommands,\n        path,\n        home,\n        previousPath,\n      } = this.state;\n    const commandArray = sanitizeInput(command);\n    const output = [sanitizeInput(command).join(' '), comm.pwd(path).data];\n    const isCommand = match(commandArray[0]);\n\n    if (noArgs(commandArray[0])) {\n      this.handleNoArgs(oldCommands, output, path);\n      return null;\n    }\n\n    if (isCommand('clear')) {\n      this.handleClearCommand(path);\n      return null;\n    }\n\n    if (isCommand('ls')) {\n      this.handleLsCommand(path, home, commandArray[1], output, oldCommands);\n      return null;\n    }\n\n    if (isCommand('pwd')) {\n      this.handlePwdCommand(path, output, oldCommands);\n      return null;\n    }\n\n    if (isCommand('help')) {\n      this.handleHelpCommand(path, output, oldCommands);\n      return null;\n    }\n\n    if (isCommand('cat')) {\n      this.handleCatCommand(path, home, commandArray[1], output, oldCommands);\n      return null;\n    }\n    if (isCommand('cd')) {\n      this.handleCdCommand(path, home, commandArray[1], output, oldCommands, previousPath);\n      return null;\n    }\n    return null;\n  }\n\n  renderCommands() {\n    const { oldCommands } = this.state;\n    return oldCommands.map((el, idx) => <Message key={idx.toString()} command={el} />);\n  }\n\n  render() {\n    const { presentWorkingDirectory, command } = this.state;\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <ShellPrompt path={presentWorkingDirectory} />\n        <ContentEditable\n          className=\"test\"\n          id=\"command-input\"\n          tabIndex=\"0\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"none\"\n          innerRef={this.contentEditable}\n          html={command}\n          disabled={false}\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          tagName=\"span\"\n        />\n        <div className=\"cursor\" />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}