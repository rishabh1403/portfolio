{"version":3,"sources":["Traverse.js","Directory.js","File.js","ListLs.js","Message.js","WelcomeText.js","App.js","index.js"],"names":["Traverse","Object","classCallCheck","this","home","type","value","about","info","contact","github","facebook","youtube","prevPath","path","console","log","ans","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","err","return","data","success","obj","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","join","name","JSON","parse","stringify","pop","temp","split","concat","toConsumableArray","tempObj","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","props","react_default","a","createElement","className","Component","keys","reduce","acc","el","map","Directory_default","File_default","renderData","Message","command","ListLs_default","Fragment","traverse","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","commands","html","currentPath","pwd","handleChange","bind","assertThisInitialized","contentEditable","React","createRef","textInput","_this2","current","focus","setInterval","evt","test","target","handleEnterPress","setState","_this3","_this$state","commandOptions","lsresult","ls","cd","index","src_Message","key","toString","WelcomeText_default","renderCommands","react_contenteditable_default","autoCorrect","autoCapitalize","innerRef","disabled","onChange","tagName","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.74dc2483.chunk.js","sourcesContent":["class Traverse {\n    constructor() {\n        this.home = {\n            type: 'directory',\n            value: {\n                about: {\n                    type: 'directory',\n                    value: {\n                        info: {\n                            type: 'file',\n                            value: 'Hi i am Stuart',\n                        },\n                    },\n                },\n                contact: {\n                    type: 'directory',\n                    value: {\n                        github: {\n                            type: 'directory',\n                            value: 'gitlink',\n                        },\n                        facebook: {\n                            type: 'file',\n                            value: 'fblink',\n                        },\n                        youtube: {\n                            type: 'file',\n                            value: 'ytlink',\n                        },\n                    },\n                },\n                // work: '',\n                // projects: '',\n                // skills: '',\n            },\n\n        };\n        this.prevPath = [];\n        this.path = [];\n    }\n\n    ls() {\n        console.log(this.path);\n        let ans = this.home;\n        for (let i of this.path) {\n            ans = ans.value[i];\n        }\n        if (ans.type === 'directory') {\n            return {\n                data: ans.value,\n                success: true,\n                type: 'LIST',\n            };\n        } else {\n            return 'Not a directory';\n        }\n    }\n\n    cat() {\n        let ans = this.obj;\n        for (let i of this.path) {\n            ans = ans.value[i];\n        }\n        if (ans.type === 'file') {\n            console.log(ans.value);\n        } else {\n            console.log('cant cat a dir');\n        }\n\n    }\n\n    pwd() {\n        return '~/' + this.path.join('/');\n    }\n\n    cd(name) {\n        if (name === '..') {\n            this.prevPath = JSON.parse(JSON.stringify(this.path));\n            this.path.pop();\n        } else if (name === '.') {\n            // directory remains unchanged\n        } else if (name === '-') {\n            const temp = JSON.parse(JSON.stringify(this.prevPath));\n            this.prevPath = JSON.parse(JSON.stringify(this.path));\n            this.path = JSON.parse(JSON.stringify(temp));\n        } else {\n            this.prevPath = JSON.parse(JSON.stringify(this.path));\n            name = name.split('/');\n            let ans = [...this.path, ...name];\n            let tempObj = JSON.parse(JSON.stringify(this.home))\n            for (let i of ans) {\n                tempObj = tempObj.value[i];\n            }\n            if (tempObj.type === 'file') {\n                console.log('cant cd to file');\n            } else {\n                this.path = [...this.path, ...name]\n            }\n        }\n        return {};\n    }\n\n}\n\n\n/*\n\n\nfunction traverse() {\n    let obj = {\n        type: 'directory',\n        value: {\n            about: {\n                type: 'directory',\n                value: {\n                    info: {\n                        type: 'file',\n                        value: 'Hi i am Stuart'\n                    },\n                }\n            },\n            contact: {\n                type: 'directory',\n                value: {\n                    github: {\n                        type: 'directory',\n                        value: 'gitlink'\n                    },\n                    facebook: {\n                        type: 'file',\n                        value: 'fblink'\n                    },\n                    youtube: {\n                        type: 'file',\n                        value: 'ytlink'\n                    }\n                }\n            },\n            work: '',\n            projects: '',\n            skills: ''\n        }\n\n    }\n    let prevPath = [];\n    let path = [];\n    return {\n        ls() {\n            let ans = obj;\n            for (let i of path) {\n                ans = ans.value[i];\n            }\n            if (ans.type === 'directory') {\n                console.log(ans.value)\n            } else {\n                console.log('Not a directory');\n            }\n\n        },\n        cat() {\n            let ans = obj;\n            for (let i of path) {\n                ans = ans.value[i];\n            }\n            if (ans.type === 'file') {\n                console.log(ans.value)\n            } else {\n                console.log('cant cat a dir');\n            }\n\n        },\n        pwd() {\n            console.log('~/' + path.join('/'));\n        },\n        cd(name) {\n            if (name === '..') {\n                prevPath = JSON.parse(JSON.stringify(path));\n                path.pop();\n            } else if (name === '.') {\n                // directory remains unchanged\n            } else if (name === '-') {\n                let temp = JSON.parse(JSON.stringify(prevPath));\n                prevPath = JSON.parse(JSON.stringify(path));\n                path = JSON.parse(JSON.stringify(temp));\n            } else {\n                prevPath = JSON.parse(JSON.stringify(path));\n                name = name.split('/');\n                let ans = [...path, ...name];\n                let tempObj = JSON.parse(JSON.stringify(obj))\n                for (let i of ans) {\n                    tempObj = tempObj.value[i];\n                }\n                if (tempObj.type === 'file') {\n                    console.log('cant cd to file');\n                } else {\n                    path = [...path, ...name]\n                }\n\n\n            }\n\n        }\n    }\n}\n\nlet temp = traverse();\ntemp.cd('contact/github')\ntemp.ls();\ntemp.pwd();\ntemp.cd('..')\ntemp.ls();\ntemp.pwd();\n// temp.cd('info');\n// temp.pwd();\n// temp.cat();\n\n\n/*\nIn CD\n    check for valid path\n    check for ... or other chars\n    after split check if obj returns anythig,,,, else throw error\n    handle trailing slash\n    handle ../xyz\n    \n\nIn OBJ\n    define structre\n        type - directory/ link / file\n        value- actual value\n\nIn ls\n    -a - add fun\n\n*/\n\nexport default Traverse;\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n\n  render() {\n    console.log(this.props);\n    return (\n      <span className=\"directory-name\">\n        {this.props.data}\n      </span>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n\n  render() {\n    console.log(this.props);\n    return (\n      <span className=\"file-name\">\n        {this.props.data}\n      </span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Directory from './Directory';\nimport File from './File';\nexport default class extends Component {\n\n  renderData(data) {\n    let keys = Object.keys(data);\n    return keys.reduce((acc, el) => {\n      return [...acc, [el, data[el]]]\n    }, []).map(el => {\n      if (el[1].type === 'directory') {\n        return <Directory data={el[0] + \" \"} />\n      }else{\n        return <File data={el[0] + \" \"} />\n      }\n\n    })\n    // console.log(x)\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        {this.props.data && this.renderData(this.props.data.data)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ListLs from './ListLs';\n\nclass Message extends Component {\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <span className=\"shell\"><b>{this.props.command[2] + ' '}$ ></b></span><span>{this.props.command[1]}</span>\n        {this.props.command[0].type === 'LIST' ? <ListLs data={this.props.command[0]} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\n\nexport default class extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div>Type <code>ls</code> to list contents of directory</div>\n        <div>Type <code>cd {`directory name`}</code> to change directory</div>\n      </React.Fragment>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Traverse from './Traverse';\nimport Message from './Message';\nimport WelcomeText from './WelcomeText'\nimport ContentEditable from 'react-contenteditable'\n\nconst traverse = new Traverse();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      commands: [],\n      html: '',\n      currentPath: traverse.pwd(),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 1000);\n  }\n\n  handleChange(evt) {\n    if (/<br>/.test(evt.target.value)) {\n      this.handleEnterPress();\n    }\n    this.setState({ command: evt.target.value });\n  }\n\n  handleEnterPress() {\n    const { command, commands } = this.state;\n    const commandOptions = command.split(' ');\n    let lsresult = [command, traverse.pwd()];\n\n    if (commandOptions[0] === 'clear') {\n      this.setState({\n        commands: [],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: traverse.pwd(),\n        });\n      });\n      return null;\n    }\n\n\n    if (commandOptions[0] === 'ls') {\n      lsresult = [traverse.ls(), ...lsresult];\n    } else if (commandOptions[0] === 'cd') {\n      lsresult = [traverse.cd(commandOptions[1]), ...lsresult];\n    } else if (commandOptions[0] === 'help') {\n      lsresult = `Type 'ls' to check contents of current directory, 'cd' to change directory`;\n    }\n\n    this.setState({\n      commands: [...commands, lsresult],\n    }, () => {\n      this.setState({\n        command: '',\n        currentPath: traverse.pwd(),\n      });\n    });\n    return null;\n  }\n\n  renderCommands() {\n    const { commands } = this.state;\n    return commands.map((el, index) => {\n      // const lsresult = Object.keys(traverse.ls()).toString();\n\n      return <Message key={index.toString()} command={el} />;\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <React.Fragment>\n\n          <span className=\"shell\"><b>{this.state.currentPath + ' '}$ ></b></span>\n\n          <ContentEditable\n            className=\"test\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            innerRef={this.contentEditable}\n            html={this.state.command} // innerHTML of the editable div\n            disabled={false}       // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            tagName='span' // Use a custom HTML tag (uses a div by default)\n          />\n          <div className=\"cursor\" />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}