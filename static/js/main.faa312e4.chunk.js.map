{"version":3,"sources":["Traverse.js","components/lsOutput/Directory.js","components/lsOutput/File.js","components/lsOutput/OuterLinks.js","ListLs.js","components/Help.js","components/Pwd.js","components/Cat.js","Error.js","Message.js","components/WelcomeText.js","util/data.js","App.js","index.js"],"names":["getNodeAtPath","path","obj","reduce","acc","el","value","checkRecursivelyForDirectoryBeforeLastNode","tempObj","Object","esm_extends","length","tempPath","toConsumableArray","pop","every","type","ls","data","option","console","log","split","absolutePath","shift","concat","ans","success","pwd","code","join","cat","Directory","_ref","react_default","a","createElement","className","File","OuterLinks","contents","email","href","ListLs","this","props","keys","map","lsOutput_Directory","key","lsOutput_File","lsOutput_OuterLinks","renderData","PureComponent","Help","Pwd","Cat","Error","Message","command","ListLs_ListLs","components_Help","components_Pwd","components_Cat","src_Error","WelcomeText","Fragment","about","info.txt","contact","blog","github","twitter","youtube","sanitizeInput","input","replace","trim","index","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","home","prevPath","commands","currentPath","comm","handleChange","bind","assertThisInitialized","handleKeyDown","contentEditable","React","createRef","textInput","_this2","current","focus","setInterval","evt","setState","target","e","_this$state","keyCode","preventDefault","name","JSON","parse","stringify","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","err","return","filter","startsWith","c","document","getElementById","range","createRange","sel","window","getSelection","setStart","childNodes","collapse","removeAllRanges","addRange","handleEnterPress","_ref2","_this3","_this$state2","commandOptions","lsresult","cdResult","temp","cdPath","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","push","idx","src_Message","toString","_this$state3","components_WelcomeText","renderCommands","react_contenteditable_default","id","tabIndex","autoCorrect","autoCapitalize","innerRef","html","disabled","onChange","onKeyDown","tagName","Component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.faa312e4.chunk.js","sourcesContent":["/* eslint-disable */\n\nconst getNodeAtPath = (path, obj) => path.reduce((acc, el) => acc.value[el], obj);\n\nconst checkRecursivelyForDirectoryBeforeLastNode = (path, obj) => {\n  let { ...tempObj } = obj;\n  if (path.length <= 1) {\n    return true;\n  }\n  let tempPath = [...path];\n  tempPath.pop();\n  return tempPath.every(el => {\n    tempObj = tempObj.value[el];\n    return tempObj && tempObj.type === 'directory'\n  })\n}\n\n\nexport const ls = (path, data, option) => {\n  /*\n   if options length < 0\n      send single query result with path\n    if option has length\n      split option by /\n      if last value is \"\" , pop it [ handle trailing slash]\n      if it starts with \"\" or ~ [ user wanted absolute url]\n          it becomes absolute url\n        else\n            push it to path\n        checkifallaredirectoryin path\n          yes get node and display\n          no throw error\n*/\n  console.log(option);\n  if (option && option.length > 0) {\n    const tempPath = option.split('/');\n    if (tempPath[tempPath.length - 1].length === 0) {\n      tempPath.pop(); //handle trailing slash\n    }\n    let absolutePath = [];\n    if (tempPath[0] === '~' || tempPath[0].length === 0) {\n      absolutePath = [...tempPath];\n      absolutePath.shift();\n    } else {\n      absolutePath = [...path, ...tempPath];\n    }\n    console.log(absolutePath);\n    if (checkRecursivelyForDirectoryBeforeLastNode(absolutePath, data)) {\n      const ans = getNodeAtPath(absolutePath, data);\n      if (!ans) {\n        return {\n          data: pwd(absolutePath).data,\n          code: 'INVALID_PATH',\n          success: false,\n          type: 'LIST',\n        };\n      }\n      if (ans.type === 'directory') {\n        return {\n          data: ans.value,\n          success: true,\n          type: 'LIST',\n        };\n      }\n      return {\n        data: pwd(absolutePath).data,\n        code: 'NOT_A_DIRECTORY',\n        success: false,\n        type: 'LIST',\n      };\n    } else {\n      return {\n        data: pwd(path).data,\n        code: 'INVALID_PATH',\n        success: false,\n        type: 'LIST',\n      };\n    }\n  } else {\n    const ans = getNodeAtPath(path, data);\n    if (ans.type === 'directory') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'LIST',\n      };\n    }\n    return {\n      data: pwd(path).data,\n      code: 'NOT_A_DIRECTORY',\n      success: false,\n      type: 'LIST',\n    };\n  }\n\n}\n\n\nexport const pwd = (path) => {\n  return {\n    data: `~/${path.join('/')}`,\n    success: true,\n    type: 'PWD',\n  };\n}\n\nexport const help = () => {\n  return {\n    data: 'User Needs Help',\n    success: true,\n    type: 'HELP',\n  };\n}\n\nexport const getRecommendation = (name, data, path) => {\n  let tempObj = JSON.parse(JSON.stringify(data));\n  for (let i of path) {\n    tempObj = tempObj.value[i];\n  }\n  if (typeof tempObj.value === 'object') {\n    return Object.keys(tempObj.value).filter(el => el.startsWith(name));\n  }\n  return [];\n}\n\nexport const cat = (path, data, option) => {\n\n  /*\n  if options length <= 0\n     error . cat require a mouse to eat [ an argument to display results]\n   if option has length\n     split option by /\n     if last value is \"\" , pop it [ handle trailing slash]\n     if it starts with \"\" or ~ [ user wanted absolute url]\n         it becomes absolute url\n       else\n           push it to path\n       checkifallaredirectoryin path\n         yes get node and display\n         no throw error\n*/\n  if (option && option.length > 0) {\n    const tempPath = option.split('/');\n    if (tempPath[tempPath.length - 1].length === 0) {\n      tempPath.pop(); //handle trailing slash\n    }\n    let absolutePath = [];\n    if (tempPath[0] === '~' || tempPath[0].length === 0) {\n      absolutePath = [...tempPath];\n      absolutePath.shift();\n    } else {\n      absolutePath = [...path, ...tempPath];\n    }\n\n    if (checkRecursivelyForDirectoryBeforeLastNode(absolutePath, data)) {\n      console.log(absolutePath);\n      const ans = getNodeAtPath(absolutePath, data);\n      console.log(ans);\n      if (!ans) {\n        return {\n          data: pwd(absolutePath).data,\n          code: 'INVALID_PATH',\n          success: false,\n          type: 'CAT',\n        };\n      }\n      if (ans.type !== 'directory') {\n        return {\n          data: ans.value,\n          success: true,\n          type: 'CAT',\n        };\n      }\n      return {\n        data: pwd(absolutePath).data,\n        code: 'IS_DIRECTORY',\n        success: false,\n        type: 'CAT',\n      };\n    } else {\n      return {\n        data: pwd(path).data,\n        code: 'INVALID_PATH',\n        success: false,\n        type: 'CAT',\n      };\n    }\n  } else {\n    return {\n      data: pwd(path).data,\n      code: 'PATH_REQUIRED',\n      success: false,\n      type: 'CAT',\n    };\n  }\n\n\n\n  //////////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /*\n  \n  \n    if (!name) {\n      return {\n        data: pwd(path).data,\n        code: 'PATH_REQUIRED',\n        success: false,\n        type: 'CAT',\n      };\n    }\n    let newName = name.split('/');\n    let newPath = [...path, ...newName];\n    let tempObj = JSON.parse(JSON.stringify(data));\n    for (let i of newPath) {\n      tempObj = tempObj.value[i];\n      if (!tempObj) {\n        return {\n          data: name,\n          code: 'INVALID_PATH',\n          success: false,\n          type: 'CAT',\n        };\n      }\n    }\n    if (tempObj.type === 'directory') {\n      return {\n        data: name,\n        code: 'NOT_A_FILE',\n        success: false,\n        type: 'CAT',\n      };\n    }\n    // console.log(tempObj);\n    return {\n      data: tempObj.value,\n      success: true,\n      type: 'CAT',\n    };\n  */\n}\n\nexport const cd = (name, path, prevPath, data) => {\n  // handle for no args\n  if (!name || name.length === 0) {\n    prevPath = JSON.parse(JSON.stringify(path));\n    path = [];\n    return {\n      prevPath,\n      path,\n    };\n  }\n  // handle for '-' \n  if (name === '-') {\n    const temp = JSON.parse(JSON.stringify(prevPath));\n    prevPath = JSON.parse(JSON.stringify(path));\n    path = JSON.parse(JSON.stringify(temp));\n    return {\n      data: `~/${path.join('/')}`,\n      success: true,\n      type: 'PWD',\n      prevPath,\n      path,\n    };\n  }\n  // get rid of this\n  if (name === '..') {\n    prevPath = JSON.parse(JSON.stringify(path));\n    path.pop();\n    return {\n      prevPath,\n      path,\n    };\n  }\n\n  const cdPath = name.split('/');\n  // console.log(cdPath);\n  let ans = [];\n  if (cdPath[cdPath.length - 1] && cdPath[cdPath.length - 1].length > 0) {\n    ans = [...path, ...cdPath];\n  } else {\n    cdPath.pop();\n    ans = [...path, ...cdPath];\n  }\n  // console.log(ans);\n  let tempObj = JSON.parse(JSON.stringify(data));\n  let prevObj = [];\n  // eslint-disable-next-line\n  for (let i of ans) {\n    if (i === '-') {\n      console.log(\"minus in between path\")\n      return {};\n    }\n    if (i === '.') {\n      return {};\n    }\n    if (i === '..') {\n      console.log(\"not supported\")\n      return {};\n      // console.log(\"coming here\");\n      // tempObj = prevObj.pop();\n      // console.log(tempObj);\n    }\n    // prevObj.push({ ...tempObj });\n    tempObj = tempObj.value[i];\n    if (!tempObj) {\n      console.log(\"Invalid Path\", name);\n      return {};\n    }\n    if (tempObj.type === 'file') {\n      console.log(\"cant go in file\", name);\n      return {};\n    }\n\n\n  }\n  // ans = ans.filter(el => el !== '.')\n  // if (ans.length === 1 && ans[0] === '..') {\n  //   this.path.pop();\n  //   return {};\n  // }\n  // let modifiedAns = [];\n  // for (let i = 1; i < ans.length; i += 1) {\n  //   if(ans[i] !== '..' && ans[i-1] !==)\n  // }\n\n  for (let i of ans) {\n    if (i !== '.' && i !== '..') {\n      path.push(i);\n    }\n  }\n  /*\n  if (name === '..') {\n    this.prevPath = JSON.parse(JSON.stringify(this.path));\n    this.path.pop();\n  } else if (name === '.') {\n    // directory remains unchanged\n  } else if (name === '-') {\n    const temp = JSON.parse(JSON.stringify(this.prevPath));\n    this.prevPath = JSON.parse(JSON.stringify(this.path));\n    this.path = JSON.parse(JSON.stringify(temp));\n  } else {\n    this.prevPath = JSON.parse(JSON.stringify(this.path));\n    let newName = name;\n    newName = newName.split('/');\n    const ans = [...this.path, ...newName];\n    let tempObj = JSON.parse(JSON.stringify(this.home));\n    // eslint-disable-next-line\n    for (let i of ans) {\n      tempObj = tempObj.value[i];\n    }\n    if (tempObj.type === 'file') {\n      // console.log('cant cd to file');\n    } else {\n      this.path = [...this.path, ...newName];\n    }\n  }\n  */\n  return {\n    prevPath,\n    path,\n  };\n\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Directory = ({ data }) => (\n  <span className=\"directory-name\">\n    {data}\n  </span>\n);\n\nDirectory.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Directory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst File = ({ data }) => (\n  <span className=\"file-name\">\n    {data}\n  </span>\n);\n\nFile.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default File;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OuterLinks = ({ data, contents }) => {\n  if (contents.email) {\n    return (\n      <span className=\"link-name\">\n        <a href={`mailto:${contents.value}`}>{data}</a>\n      </span>\n    );\n  }\n  return (\n    <span className=\"link-name\">\n      <a href={contents.value}>{data}</a>\n    </span>\n  );\n};\n\nOuterLinks.propTypes = {\n  data: PropTypes.string.isRequired,\n  contents: PropTypes.shape().isRequired,\n};\n\nexport default OuterLinks;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Directory from './components/lsOutput/Directory';\nimport File from './components/lsOutput/File';\nimport OuterLinks from './components/lsOutput/OuterLinks';\n\nconst renderData = (data) => {\n  const keys = Object.keys(data);\n  return keys.reduce((acc, el) => [...acc, [el, data[el]]], []).map((el) => {\n    if (el[1].type === 'directory') {\n      return <Directory key={el[0]} data={`${el[0]} `} />;\n    }\n    if (el[1].type === 'file') {\n      return <File key={el[0]} data={`${el[0]} `} />;\n    }\n    return <OuterLinks key={el[0]} data={`${el[0]} `} contents={el[1]} />;\n  });\n};\n\nexport default class ListLs extends PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <div>\n        {data && renderData(data.data)}\n      </div>\n    );\n  }\n}\nListLs.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n","import React from 'react';\n\nconst Help = () => (\n  <div>\n    <div>\n      <span>Use the following commands to navigate the app</span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>cd &lt;directory name&gt;</code>\n        <span>- to change directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>cat &lt;file name&gt;</code>\n        <span>- to view contents of file</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>pwd</code>\n        <span>- to see current working directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>clear</code>\n        <span>- to clear your console</span>\n      </span>\n    </div>\n  </div>\n);\n\n\nexport default Help;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pwd = ({ data }) => (\n  <div>\n    {data}\n  </div>\n);\n\nPwd.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Pwd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cat = ({ data }) => (\n  <div>\n    {data}\n  </div>\n);\n\nCat.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Cat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ data }) => {\n  if (data.type === 'LIST') {\n    if (data.code === 'NOT_A_DIRECTORY') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is not directory, try using\n          <code>\n            cat &lt;file name&gt;\n          </code>\n          to view the contents\n        </div>\n      );\n    }\n    if (data.code === 'INVALID_PATH') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is not a valid path for a directory\n        </div>\n      );\n    }\n  }\n  if (data.type === 'CAT') {\n    if (data.code === 'IS_DIRECTORY') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          :- is directory, try using\n          <code>\n            ls\n          </code>\n          inside the directory to view contents\n        </div>\n      );\n    }\n    if (data.code === 'PATH_REQUIRED') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            cat\n          </code>\n          command requires a file name to read the content\n          <code>\n            cat &lt;file name&gt;\n          </code>\n        </div>\n      );\n    }\n    if (data.code === 'INVALID_PATH') {\n      return (\n        <div className=\"error-msg\">\n          <code>\n            {data.data}\n          </code>\n          is an invalid path\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nError.propTypes = {\n  data: PropTypes.shape().isRequired,\n};\n\nexport default Error;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ListLs from './ListLs';\nimport Help from './components/Help';\nimport Pwd from './components/Pwd';\nimport Cat from './components/Cat';\nimport Error from './Error';\n\nconst renderCommandOutput = (success, type, data) => {\n  if (!success) {\n    return <Error data={data} />;\n  }\n  if (type === 'LIST') {\n    return <ListLs data={data} />;\n  }\n  if (type === 'HELP') {\n    return <Help />;\n  }\n  if (type === 'PWD') {\n    return <Pwd data={data.data} />;\n  }\n  if (type === 'CAT') {\n    return <Cat data={data.data} />;\n  }\n  return null;\n};\n\nclass Message extends PureComponent {\n  render() {\n    const { command } = this.props;\n    return (\n      <div>\n        <span className=\"shell\">\n          <b>\n            {`${command[2]} `}\n            $ &gt;\n          </b>\n        </span>\n        <span>\n          {command[1]}\n        </span>\n        {renderCommandOutput(command[0].success, command[0].type, command[0])}\n      </div>\n    );\n  }\n}\n\nMessage.propTypes = {\n  command: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Message;\n","import React from 'react';\n\nconst WelcomeText = () => (\n  <React.Fragment>\n    <div>\n      <span>\n        <span>Type</span>\n        <code>\n          help\n        </code>\n        <span>to get a help menu</span>\n      </span>\n    </div>\n  </React.Fragment>\n);\n\nexport default WelcomeText;\n","const obj = {\n  type: 'directory',\n  value: {\n    about: {\n      type: 'directory',\n      value: {\n        'info.txt': {\n          type: 'file',\n          value: `Hey there hacker, I am Rishabh, a software engineer from India.\n                   I am mostly passionate about web technologies, linux and everthing opensource`,\n        },\n      },\n    },\n    contact: {\n      type: 'directory',\n      value: {\n        blog: {\n          type: 'link',\n          value: 'https://rishabh1403.com/',\n        },\n        email: {\n          type: 'link',\n          email: true,\n          value: 'contact@rishabh1403.com',\n        },\n        github: {\n          type: 'link',\n          value: 'https://github.com/rishabh1403/',\n        },\n        twitter: {\n          type: 'link',\n          value: 'https://twitter.com/rishabhjain1403',\n        },\n        youtube: {\n          type: 'link',\n          value: 'https://www.youtube.com/rishabh1403',\n        },\n      },\n    },\n    // work: '',\n    // projects: '',\n    // skills: '',\n  },\n\n};\n\nexport default obj;\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nimport './styles/App.css';\nimport * as comm from './Traverse';\nimport Message from './Message';\nimport WelcomeText from './components/WelcomeText';\nimport obj from './util/data';\n\nconst sanitizeInput = input => input.replace(\"&nbsp;\", \"\").trim().split(' ').map(el => el.replace('&nbsp;', ''));\n\n// console.log(comm['ls']([], obj));\n// const traverse = new Traverse();\nlet index = 0;\n// const getCurrentWorkingDirectory = () => traverse.pwd().data;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      home: obj,\n      path: [],\n      prevPath: [],\n      commands: [],\n      currentPath: comm.pwd([]).data,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 100);\n    // eslint-disable-next-line\n    console.log(\"%cNitin Stop Looking At my console for errors, now you won't find any\", 'background: black; color: green; font-size: x-large');\n  }\n\n  handleChange(evt) {\n    // console.log(\"key change\")\n    // if (/<br>/.test(evt.target.value)) {\n    //   console.log(\"enter is press\");\n    //   this.handleEnterPress();\n    // }\n    // console.log(\"enter is not press\");\n    this.setState({ command: evt.target.value });\n  }\n\n  handleKeyDown(e) {\n    // let that = this;\n    // console.log(\"key dowm\")\n    // console.log(e);\n    // console.log(e.target.innerText);\n    const { command, commands } = this.state;\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      const commandOptions = command.split(' ');\n      const name = comm.getRecommendation(commandOptions[1], this.state.home, this.state.path);\n      // console.log(name);\n      if (name.length > 0) {\n        this.setState(({ command: c }) => ({\n          command: `${c.split(' ')[0]} ${name}`,\n        }), () => {\n          const el = document.getElementById('yup');\n          const range = document.createRange();\n          const sel = window.getSelection();\n          range.setStart(el.childNodes[0], el.childNodes[0].length);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        });\n      }\n      // this.handleEnterPress();\n    }\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.handleEnterPress();\n    }\n    if (e.keyCode === 38) {\n      e.preventDefault();\n      index += 1;\n      if (commands.length - index >= 0) {\n        // console.log(this.state.commands[this.state.commands.length - index][1])\n        this.setState(({ commands: c }) => ({\n          command: c[c.length - index][1].trim(),\n        }), () => {\n          const el = document.getElementById('yup');\n          const range = document.createRange();\n          const sel = window.getSelection();\n          range.setStart(el.childNodes[0], el.childNodes[0].length);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        });\n      }\n    }\n  }\n\n  handleEnterPress() {\n    index = 0;\n    const { command, commands } = this.state;\n    const commandOptions = sanitizeInput(command);\n    let lsresult = [sanitizeInput(command).join(' '), comm.pwd(this.state.path).data];\n    if (!commandOptions[0]) {\n      this.setState({\n        commands: [...commands, [{}, ...lsresult]],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: comm.pwd(this.state.path).data,\n        });\n      });\n      return null;\n    }\n\n    if (commandOptions[0] === 'clear') {\n      this.setState({\n        commands: [],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: comm.pwd(this.state.path).data,\n        });\n      });\n      return null;\n    }\n\n\n    if (commandOptions[0] === 'ls') {\n      lsresult = [comm.ls(this.state.path, this.state.home, commandOptions[1]), ...lsresult];\n    } else if (commandOptions[0] === 'pwd') {\n      lsresult = [comm.pwd(this.state.path), ...lsresult];\n    } else if (commandOptions[0] === 'cd') {\n      const cdResult = comm.cd(commandOptions[1], this.state.path, this.state.prevPath, this.state.home);\n      lsresult = [cdResult, ...lsresult];\n      this.setState({\n        path: cdResult.path,\n        prevPath: cdResult.prevPath,\n      });\n    } else if (commandOptions[0] === 'help') {\n      lsresult = [comm.help(), ...lsresult];\n    } else if (commandOptions[0] === 'cat') {\n      lsresult = [comm.cat(this.state.path, this.state.home, commandOptions[1]), ...lsresult];\n    }\n\n    this.setState({\n      commands: [...commands, lsresult],\n    }, () => {\n      this.setState({\n        command: '',\n        currentPath: comm.pwd(this.state.path).data,\n      });\n    });\n    return null;\n  }\n\n  renderCommands() {\n    const { commands } = this.state;\n    return commands.map((el, idx) => <Message key={idx.toString()} command={el} />);\n  }\n\n  render() {\n    const { currentPath, command } = this.state;\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <React.Fragment>\n\n          <span className=\"shell\">\n            <b>\n              {`${currentPath} `}\n              $ &gt;\n            </b>\n          </span>\n\n          <ContentEditable\n            className=\"test\"\n            id=\"yup\"\n            tabIndex=\"0\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            innerRef={this.contentEditable}\n            html={command} // innerHTML of the editable div\n            disabled={false} // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            onKeyDown={this.handleKeyDown}\n            tagName=\"span\" // Use a custom HTML tag (uses a div by default)\n          />\n          <div className=\"cursor\" />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}