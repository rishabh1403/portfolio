{"version":3,"sources":["util/data.js","Traverse.js","components/lsOutput/Directory.js","components/lsOutput/File.js","ListLs.js","components/Help.js","Message.js","components/WelcomeText.js","App.js","index.js"],"names":["obj","type","value","about","info","contact","github","facebook","youtube","Traverse","Object","classCallCheck","this","home","prevPath","path","ans","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","err","return","data","success","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","console","log","join","name","JSON","parse","stringify","pop","temp","split","concat","toConsumableArray","tempObj","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Directory","_ref","react_default","a","createElement","className","File","keys","reduce","acc","el","map","lsOutput_Directory","lsOutput_File","props","renderData","Component","Help","Message","ListLs_default","components_Help","command","renderCommandOutput","WelcomeText","Fragment","traverse","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","commands","html","currentPath","pwd","handleChange","bind","assertThisInitialized","contentEditable","React","createRef","textInput","_this2","current","focus","setInterval","evt","test","target","handleEnterPress","setState","_this3","_this$state","commandOptions","lsresult","ls","cd","index","src_Message","key","toString","components_WelcomeText","renderCommands","react_contenteditable_default","autoCorrect","autoCapitalize","innerRef","disabled","onChange","tagName","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9088ad42.chunk.js","sourcesContent":["const obj = {\n  type: 'directory',\n  value: {\n    about: {\n      type: 'directory',\n      value: {\n        info: {\n          type: 'file',\n          value: 'Hi i am Stuart',\n        },\n      },\n    },\n    contact: {\n      type: 'directory',\n      value: {\n        github: {\n          type: 'directory',\n          value: 'gitlink',\n        },\n        facebook: {\n          type: 'file',\n          value: 'fblink',\n        },\n        youtube: {\n          type: 'file',\n          value: 'ytlink',\n        },\n      },\n    },\n    // work: '',\n    // projects: '',\n    // skills: '',\n  },\n\n};\n\nexport default obj;\n","import obj from './util/data';\n\nclass Traverse {\n  constructor() {\n    this.home = obj;\n    this.prevPath = [];\n    this.path = [];\n  }\n\n  ls() {\n    let ans = this.home;\n    for (let i of this.path) {\n      ans = ans.value[i];\n    }\n    if (ans.type === 'directory') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'LIST',\n      };\n    } else {\n      return 'Not a directory';\n    }\n  }\n\n  cat() {\n    let ans = this.obj;\n    for (let i of this.path) {\n      ans = ans.value[i];\n    }\n    if (ans.type === 'file') {\n      console.log(ans.value);\n    } else {\n      console.log('cant cat a dir');\n    }\n\n  }\n\n  pwd() {\n    return '~/' + this.path.join('/');\n  }\n\n  cd(name) {\n    if (name === '..') {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path.pop();\n    } else if (name === '.') {\n      // directory remains unchanged\n    } else if (name === '-') {\n      const temp = JSON.parse(JSON.stringify(this.prevPath));\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path = JSON.parse(JSON.stringify(temp));\n    } else {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      name = name.split('/');\n      let ans = [...this.path, ...name];\n      let tempObj = JSON.parse(JSON.stringify(this.home))\n      for (let i of ans) {\n        tempObj = tempObj.value[i];\n      }\n      if (tempObj.type === 'file') {\n        console.log('cant cd to file');\n      } else {\n        this.path = [...this.path, ...name]\n      }\n    }\n    return {};\n  }\n\n}\n\n\n/*\n\n\nfunction traverse() {\n    let obj = {\n        type: 'directory',\n        value: {\n            about: {\n                type: 'directory',\n                value: {\n                    info: {\n                        type: 'file',\n                        value: 'Hi i am Stuart'\n                    },\n                }\n            },\n            contact: {\n                type: 'directory',\n                value: {\n                    github: {\n                        type: 'directory',\n                        value: 'gitlink'\n                    },\n                    facebook: {\n                        type: 'file',\n                        value: 'fblink'\n                    },\n                    youtube: {\n                        type: 'file',\n                        value: 'ytlink'\n                    }\n                }\n            },\n            work: '',\n            projects: '',\n            skills: ''\n        }\n\n    }\n    let prevPath = [];\n    let path = [];\n    return {\n        ls() {\n            let ans = obj;\n            for (let i of path) {\n                ans = ans.value[i];\n            }\n            if (ans.type === 'directory') {\n                console.log(ans.value)\n            } else {\n                console.log('Not a directory');\n            }\n\n        },\n        cat() {\n            let ans = obj;\n            for (let i of path) {\n                ans = ans.value[i];\n            }\n            if (ans.type === 'file') {\n                console.log(ans.value)\n            } else {\n                console.log('cant cat a dir');\n            }\n\n        },\n        pwd() {\n            console.log('~/' + path.join('/'));\n        },\n        cd(name) {\n            if (name === '..') {\n                prevPath = JSON.parse(JSON.stringify(path));\n                path.pop();\n            } else if (name === '.') {\n                // directory remains unchanged\n            } else if (name === '-') {\n                let temp = JSON.parse(JSON.stringify(prevPath));\n                prevPath = JSON.parse(JSON.stringify(path));\n                path = JSON.parse(JSON.stringify(temp));\n            } else {\n                prevPath = JSON.parse(JSON.stringify(path));\n                name = name.split('/');\n                let ans = [...path, ...name];\n                let tempObj = JSON.parse(JSON.stringify(obj))\n                for (let i of ans) {\n                    tempObj = tempObj.value[i];\n                }\n                if (tempObj.type === 'file') {\n                    console.log('cant cd to file');\n                } else {\n                    path = [...path, ...name]\n                }\n\n\n            }\n\n        }\n    }\n}\n\nlet temp = traverse();\ntemp.cd('contact/github')\ntemp.ls();\ntemp.pwd();\ntemp.cd('..')\ntemp.ls();\ntemp.pwd();\n// temp.cd('info');\n// temp.pwd();\n// temp.cat();\n\n\n/*\nIn CD\n    check for valid path\n    check for ... or other chars\n    after split check if obj returns anythig,,,, else throw error\n    handle trailing slash\n    handle ../xyz\n    \n\nIn OBJ\n    define structre\n        type - directory/ link / file\n        value- actual value\n\nIn ls\n    -a - add fun\n\n*/\n\nexport default Traverse;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Directory = ({ data }) => (\n  <span className=\"directory-name\">\n    {data}\n  </span>\n);\n\nDirectory.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Directory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst File = ({ data }) => (\n  <span className=\"file-name\">\n    {data}\n  </span>\n);\n\nFile.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default File;\n","import React, { Component } from 'react';\nimport Directory from './components/lsOutput/Directory';\nimport File from './components/lsOutput/File';\n\nexport default class extends Component {\n\n  renderData(data) {\n    let keys = Object.keys(data);\n    return keys.reduce((acc, el) => {\n      return [...acc, [el, data[el]]]\n    }, []).map(el => {\n      if (el[1].type === 'directory') {\n        return <Directory data={el[0] + \" \"} />\n      }else{\n        return <File data={el[0] + \" \"} />\n      }\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.data && this.renderData(this.props.data.data)}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Help = () => (\n  <div>\n    <div>\n      <span>Use the following commands to navigate the app</span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n  </div>\n);\n\n\nexport default Help;\n","import React, { Component } from 'react';\nimport ListLs from './ListLs';\nimport Help from './components/Help';\n\nclass Message extends Component {\n  // eslint-disable-next-line class-methods-use-this\n  renderCommandOutput(type, data) {\n    if (type === 'LIST') {\n      return <ListLs data={data} />;\n    }\n    if (type === 'HELP') {\n      return <Help />;\n    }\n    return null;\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <span className=\"shell\"><b>{this.props.command[2] + ' '}$ ></b></span><span>{this.props.command[1]}</span>\n        {this.renderCommandOutput(this.props.command[0].type, this.props.command[0])}\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React from 'react';\n\nconst WelcomeText = () => (\n  <React.Fragment>\n    <div>\n      <span>\n        <span>Type</span>\n        <code>\n          help\n        </code>\n        <span>to get a help menu</span>\n      </span>\n    </div>\n  </React.Fragment>\n);\n\n\nexport default WelcomeText;\n\n","import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nimport './styles/App.css';\nimport Traverse from './Traverse';\nimport Message from './Message';\nimport WelcomeText from './components/WelcomeText';\n\nconst traverse = new Traverse();\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      commands: [],\n      html: '',\n      currentPath: traverse.pwd(),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 1000);\n  }\n\n  handleChange(evt) {\n    if (/<br>/.test(evt.target.value)) {\n      this.handleEnterPress();\n    }\n    this.setState({ command: evt.target.value });\n  }\n\n  handleEnterPress() {\n    const { command, commands } = this.state;\n    const commandOptions = command.split(' ');\n    let lsresult = [command, traverse.pwd()];\n\n    if (commandOptions[0] === 'clear') {\n      this.setState({\n        commands: [],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: traverse.pwd(),\n        });\n      });\n      return null;\n    }\n\n\n    if (commandOptions[0] === 'ls') {\n      lsresult = [traverse.ls(), ...lsresult];\n    } else if (commandOptions[0] === 'cd') {\n      lsresult = [traverse.cd(commandOptions[1]), ...lsresult];\n    } else if (commandOptions[0] === 'help') {\n      lsresult = [{\n        data: 'User Needs Help',\n        success: true,\n        type: 'HELP',\n      }, ...lsresult];\n    }\n\n    this.setState({\n      commands: [...commands, lsresult],\n    }, () => {\n      this.setState({\n        command: '',\n        currentPath: traverse.pwd(),\n      });\n    });\n    return null;\n  }\n\n  renderCommands() {\n    const { commands } = this.state;\n    return commands.map((el, index) => {\n      // const lsresult = Object.keys(traverse.ls()).toString();\n\n      return <Message key={index.toString()} command={el} />;\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <React.Fragment>\n\n          <span className=\"shell\"><b>{this.state.currentPath + ' '}$ ></b></span>\n\n          <ContentEditable\n            className=\"test\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            innerRef={this.contentEditable}\n            html={this.state.command} // innerHTML of the editable div\n            disabled={false}       // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            tagName='span' // Use a custom HTML tag (uses a div by default)\n          />\n          <div className=\"cursor\" />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}