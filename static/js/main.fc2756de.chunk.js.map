{"version":3,"sources":["util/data.js","Traverse.js","components/lsOutput/Directory.js","components/lsOutput/File.js","ListLs.js","components/Help.js","components/Pwd.js","Message.js","components/WelcomeText.js","App.js","index.js"],"names":["obj","type","value","about","info","contact","github","facebook","youtube","getNodeAtPath","path","reduce","acc","el","Traverse","Object","classCallCheck","this","home","prevPath","ans","data","success","pwd","code","concat","join","name","JSON","parse","stringify","pop","temp","newName","split","toConsumableArray","tempObj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","err","return","Directory","_ref","react_default","a","createElement","className","File","keys","map","lsOutput_Directory","lsOutput_File","props","renderData","Component","Help","Pwd","Message","ListLs_default","components_Help","components_Pwd","console","log","command","renderCommandOutput","PureComponent","WelcomeText","Fragment","traverse","getCurrentWorkingDirectory","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","commands","currentPath","handleChange","bind","assertThisInitialized","contentEditable","React","createRef","textInput","_this2","current","focus","setInterval","evt","test","target","handleEnterPress","setState","_this3","_this$state","commandOptions","lsresult","ls","cd","index","src_Message","key","toString","components_WelcomeText","renderCommands","react_contenteditable_default","autoCorrect","autoCapitalize","innerRef","html","disabled","onChange","tagName","ReactDOM","render","src_App","document","getElementById"],"mappings":"4RAoCeA,SApCH,CACVC,KAAM,YACNC,MAAO,CACLC,MAAO,CACLF,KAAM,YACNC,MAAO,CACLE,KAAM,CACJH,KAAM,OACNC,MAAO,oBAIbG,QAAS,CACPJ,KAAM,YACNC,MAAO,CACLI,OAAQ,CACNL,KAAM,YACNC,MAAO,WAETK,SAAU,CACRN,KAAM,OACNC,MAAO,UAETM,QAAS,CACPP,KAAM,OACNC,MAAO,eCvBXO,EAAgB,SAAAC,GAAI,OAAIA,EAAKC,OAAO,SAACC,EAAKC,GAAN,OAAab,EAAIE,MAAMW,IAAKb,IAiFvDc,aA9Eb,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACbG,KAAKC,KAAOlB,EACZiB,KAAKE,SAAW,GAChBF,KAAKP,KAAO,oDAIZ,IAAMU,EAAMX,EAAcQ,KAAKP,MAC/B,MAAiB,cAAbU,EAAInB,KACC,CACLoB,KAAMD,EAAIlB,MACVoB,SAAS,EACTrB,KAAM,QAGH,CACLoB,KAAMJ,KAAKM,MAAMF,KACjBG,KAAM,kBACNF,SAAS,EACTrB,KAAM,sCAKR,IAAMmB,EAAMX,EAAcQ,KAAKP,MAC/B,MAAiB,SAAbU,EAAInB,KACC,CACLoB,KAAMD,EAAIlB,MACVoB,SAAS,EACTrB,KAAM,OAGH,CACLoB,KAAMJ,KAAKM,MAAMF,KACjBG,KAAM,aACNF,SAAS,EACTrB,KAAM,qCAKR,MAAO,CACLoB,KAAI,KAAAI,OAAOR,KAAKP,KAAKgB,KAAK,MAC1BJ,SAAS,EACTrB,KAAM,kCAIP0B,GACD,GAAa,OAATA,EACFV,KAAKE,SAAWS,KAAKC,MAAMD,KAAKE,UAAUb,KAAKP,OAC/CO,KAAKP,KAAKqB,WACL,GAAa,MAATJ,QAEJ,GAAa,MAATA,EAAc,CACvB,IAAMK,EAAOJ,KAAKC,MAAMD,KAAKE,UAAUb,KAAKE,WAC5CF,KAAKE,SAAWS,KAAKC,MAAMD,KAAKE,UAAUb,KAAKP,OAC/CO,KAAKP,KAAOkB,KAAKC,MAAMD,KAAKE,UAAUE,QACjC,CACLf,KAAKE,SAAWS,KAAKC,MAAMD,KAAKE,UAAUb,KAAKP,OAC/C,IAAIuB,EAAUN,EACdM,EAAUA,EAAQC,MAAM,KACxB,IAAMd,EAAG,GAAAK,OAAAV,OAAAoB,EAAA,EAAApB,CAAOE,KAAKP,MAAZK,OAAAoB,EAAA,EAAApB,CAAqBkB,IAC1BG,EAAUR,KAAKC,MAAMD,KAAKE,UAAUb,KAAKC,OALxCmB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAOL,QAAAC,EAAAC,EAActB,EAAduB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmB,KAAVU,EAAUN,EAAAvC,MACjBkC,EAAUA,EAAQlC,MAAM6C,IARrB,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAUgB,SAAjBH,EAAQnC,OAGVgB,KAAKP,KAAL,GAAAe,OAAAV,OAAAoB,EAAA,EAAApB,CAAgBE,KAAKP,MAArBK,OAAAoB,EAAA,EAAApB,CAA8BkB,KAGlC,MAAO,YClEIiB,EAVG,SAAAC,GAAA,IAAG9B,EAAH8B,EAAG9B,KAAH,OAChB+B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACblC,ICQUmC,EAVF,SAAAL,GAAA,IAAG9B,EAAH8B,EAAG9B,KAAH,OACX+B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACblC,yLCCQA,GAET,OADWN,OAAO0C,KAAKpC,GACXV,OAAO,SAACC,EAAKC,GACvB,SAAAY,OAAAV,OAAAoB,EAAA,EAAApB,CAAWH,GAAX,CAAgB,CAACC,EAAIQ,EAAKR,OACzB,IAAI6C,IAAI,SAAA7C,GACT,MAAmB,cAAfA,EAAG,GAAGZ,KACDmD,EAAAC,EAAAC,cAACK,EAAD,CAAWtC,KAAMR,EAAG,GAAK,MAEzBuC,EAAAC,EAAAC,cAACM,EAAD,CAAMvC,KAAMR,EAAG,GAAK,yCAO/B,OACEuC,EAAAC,EAAAC,cAAA,WACGrC,KAAK4C,MAAMxC,MAAQJ,KAAK6C,WAAW7C,KAAK4C,MAAMxC,KAAKA,cAnB/B0C,aCmBdC,EArBF,kBACXZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+DAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,4DAGJF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,8DCHOW,EAVH,SAAAd,GAAA,IAAG9B,EAAH8B,EAAG9B,KAAH,OACV+B,EAAAC,EAAAC,cAAA,WACGjC,IC0BU6C,8LAxBOjE,EAAMoB,GACxB,MAAa,SAATpB,EACKmD,EAAAC,EAAAC,cAACa,EAAD,CAAQ9C,KAAMA,IAEV,SAATpB,EACKmD,EAAAC,EAAAC,cAACc,EAAD,MAEI,QAATnE,EACKmD,EAAAC,EAAAC,cAACe,EAAD,CAAKhD,KAAMA,EAAKA,OAElB,sCAKP,OADAiD,QAAQC,IAAItD,KAAK4C,OAEfT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,SAAIrC,KAAK4C,MAAMW,QAAQ,GAAK,IAA5B,QAA8CpB,EAAAC,EAAAC,cAAA,YAAOrC,KAAK4C,MAAMW,QAAQ,IAC/FvD,KAAKwD,oBAAoBxD,KAAK4C,MAAMW,QAAQ,GAAGvE,KAAMgB,KAAK4C,MAAMW,QAAQ,YApB3DE,iBCWPC,EAdK,kBAClBvB,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,oBAGAF,EAAAC,EAAAC,cAAA,sCCFFuB,EAAW,IAAI/D,EAEfgE,EAA6B,kBAAMD,EAAStD,MAAMF,MA2GzC0D,cAxGb,SAAAA,EAAYlB,GAAO,IAAAmB,EAAA,OAAAjE,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACjBC,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAE,KAAAF,OAAAmE,EAAA,EAAAnE,CAAAgE,GAAAI,KAAAlE,KAAM4C,KACDuB,MAAQ,CACXZ,QAAS,GACTa,SAAU,GACVC,YAAaR,KAEfE,EAAKO,aAAeP,EAAKO,aAAaC,KAAlBzE,OAAA0E,EAAA,EAAA1E,QAAA0E,EAAA,EAAA1E,CAAAiE,KACpBA,EAAKU,gBAAkBC,IAAMC,YAC7BZ,EAAKa,UAAYF,IAAMC,YATNZ,mFAYC,IAAAc,EAAA7E,KAClBA,KAAKyE,gBAAgBK,QAAQC,QAC7BC,YAAY,WACVH,EAAKJ,gBAAgBK,QAAQC,SAC5B,0CAGQE,GACP,OAAOC,KAAKD,EAAIE,OAAOlG,QACzBe,KAAKoF,mBAEPpF,KAAKqF,SAAS,CAAE9B,QAAS0B,EAAIE,OAAOlG,mDAGnB,IAAAqG,EAAAtF,KAAAuF,EACavF,KAAKmE,MAA3BZ,EADSgC,EACThC,QAASa,EADAmB,EACAnB,SACXoB,EAAiBjC,EAAQtC,MAAM,KACjCwE,EAAW,CAAClC,EAASM,KAEzB,MAA0B,UAAtB2B,EAAe,IACjBxF,KAAKqF,SAAS,CACZjB,SAAU,IACT,WACDkB,EAAKD,SAAS,CACZ9B,QAAS,GACTc,YAAaR,QAGV,OAIiB,OAAtB2B,EAAe,GACjBC,EAAQ,CAAI7B,EAAS8B,MAAblF,OAAAV,OAAAoB,EAAA,EAAApB,CAAsB2F,IACC,QAAtBD,EAAe,GACxBC,EAAQ,CAAI7B,EAAStD,OAAbE,OAAAV,OAAAoB,EAAA,EAAApB,CAAuB2F,IACA,OAAtBD,EAAe,GACxBC,EAAQ,CAAI7B,EAAS+B,GAAGH,EAAe,KAA/BhF,OAAAV,OAAAoB,EAAA,EAAApB,CAAuC2F,IAChB,SAAtBD,EAAe,KACxBC,EAAQ,CAAI,CACVrF,KAAM,kBACNC,SAAS,EACTrB,KAAM,SAHAwB,OAAAV,OAAAoB,EAAA,EAAApB,CAIF2F,KAGRzF,KAAKqF,SAAS,CACZjB,SAAQ,GAAA5D,OAAAV,OAAAoB,EAAA,EAAApB,CAAMsE,GAAN,CAAgBqB,KACvB,WACDH,EAAKD,SAAS,CACZ9B,QAAS,GACTc,YAAaR,QAGV,+CAKP,OADqB7D,KAAKmE,MAAlBC,SACQ3B,IAAI,SAAC7C,EAAIgG,GAGvB,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,CAASC,IAAKF,EAAMG,WAAYxC,QAAS3D,uCAKlD,OACEuC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACExB,EAAAC,EAAAC,cAAC2D,EAAD,MACChG,KAAKiG,iBACN9D,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KAEExB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,SAAIrC,KAAKmE,MAAME,YAAc,IAA7B,QAExBlC,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CACEE,UAAU,OACV6D,YAAY,MACZC,eAAe,OACfC,SAAUrG,KAAKyE,gBACf6B,KAAMtG,KAAKmE,MAAMZ,QACjBgD,UAAU,EACVC,SAAUxG,KAAKsE,aACfmC,QAAQ,SAEVtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAlGPQ,aCPlB4D,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fc2756de.chunk.js","sourcesContent":["const obj = {\n  type: 'directory',\n  value: {\n    about: {\n      type: 'directory',\n      value: {\n        info: {\n          type: 'file',\n          value: 'Hi i am Stuart',\n        },\n      },\n    },\n    contact: {\n      type: 'directory',\n      value: {\n        github: {\n          type: 'directory',\n          value: 'gitlink',\n        },\n        facebook: {\n          type: 'file',\n          value: 'fblink',\n        },\n        youtube: {\n          type: 'file',\n          value: 'ytlink',\n        },\n      },\n    },\n    // work: '',\n    // projects: '',\n    // skills: '',\n  },\n\n};\n\nexport default obj;\n","import obj from './util/data';\n\nconst getNodeAtPath = path => path.reduce((acc, el) => obj.value[el], obj);\n\nclass Traverse {\n  constructor() {\n    this.home = obj;\n    this.prevPath = [];\n    this.path = [];\n  }\n\n  ls() {\n    const ans = getNodeAtPath(this.path);\n    if (ans.type === 'directory') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'LIST',\n      };\n    }\n    return {\n      data: this.pwd().data,\n      code: 'NOT_A_DIRECTORY',\n      success: false,\n      type: 'LIST',\n    };\n  }\n\n  cat() {\n    const ans = getNodeAtPath(this.path);\n    if (ans.type === 'file') {\n      return {\n        data: ans.value,\n        success: true,\n        type: 'CAT',\n      };\n    }\n    return {\n      data: this.pwd().data,\n      code: 'NOT_A_FILE',\n      success: false,\n      type: 'CAT',\n    };\n  }\n\n  pwd() {\n    return {\n      data: `~/${this.path.join('/')}`,\n      success: true,\n      type: 'PWD',\n    };\n  }\n\n  cd(name) {\n    if (name === '..') {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path.pop();\n    } else if (name === '.') {\n      // directory remains unchanged\n    } else if (name === '-') {\n      const temp = JSON.parse(JSON.stringify(this.prevPath));\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      this.path = JSON.parse(JSON.stringify(temp));\n    } else {\n      this.prevPath = JSON.parse(JSON.stringify(this.path));\n      let newName = name;\n      newName = newName.split('/');\n      const ans = [...this.path, ...newName];\n      let tempObj = JSON.parse(JSON.stringify(this.home));\n      // eslint-disable-next-line\n      for (let i of ans) {\n        tempObj = tempObj.value[i];\n      }\n      if (tempObj.type === 'file') {\n        // console.log('cant cd to file');\n      } else {\n        this.path = [...this.path, ...newName];\n      }\n    }\n    return {};\n  }\n}\n\nexport default Traverse;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Directory = ({ data }) => (\n  <span className=\"directory-name\">\n    {data}\n  </span>\n);\n\nDirectory.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Directory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst File = ({ data }) => (\n  <span className=\"file-name\">\n    {data}\n  </span>\n);\n\nFile.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default File;\n","import React, { Component } from 'react';\nimport Directory from './components/lsOutput/Directory';\nimport File from './components/lsOutput/File';\n\nexport default class extends Component {\n\n  renderData(data) {\n    let keys = Object.keys(data);\n    return keys.reduce((acc, el) => {\n      return [...acc, [el, data[el]]]\n    }, []).map(el => {\n      if (el[1].type === 'directory') {\n        return <Directory data={el[0] + \" \"} />\n      }else{\n        return <File data={el[0] + \" \"} />\n      }\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.data && this.renderData(this.props.data.data)}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Help = () => (\n  <div>\n    <div>\n      <span>Use the following commands to navigate the app</span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n    <div>\n      <span>\n        <code>ls</code>\n        <span>- to see the contents of current directory</span>\n      </span>\n    </div>\n  </div>\n);\n\n\nexport default Help;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pwd = ({ data }) => (\n  <div>\n    {data}\n  </div>\n);\n\nPwd.propTypes = {\n  data: PropTypes.string.isRequired,\n};\n\nexport default Pwd;\n","import React, { PureComponent } from 'react';\nimport ListLs from './ListLs';\nimport Help from './components/Help';\nimport Pwd from './components/Pwd';\n\nclass Message extends PureComponent {\n  // eslint-disable-next-line class-methods-use-this\n  renderCommandOutput(type, data) {\n    if (type === 'LIST') {\n      return <ListLs data={data} />;\n    }\n    if (type === 'HELP') {\n      return <Help />;\n    }\n    if (type === 'PWD') {\n      return <Pwd data={data.data} />;\n    }\n    return null;\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <span className=\"shell\"><b>{this.props.command[2] + ' '}$ ></b></span><span>{this.props.command[1]}</span>\n        {this.renderCommandOutput(this.props.command[0].type, this.props.command[0])}\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React from 'react';\n\nconst WelcomeText = () => (\n  <React.Fragment>\n    <div>\n      <span>\n        <span>Type</span>\n        <code>\n          help\n        </code>\n        <span>to get a help menu</span>\n      </span>\n    </div>\n  </React.Fragment>\n);\n\nexport default WelcomeText;\n","import React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nimport './styles/App.css';\nimport Traverse from './Traverse';\nimport Message from './Message';\nimport WelcomeText from './components/WelcomeText';\n\nconst traverse = new Traverse();\n\nconst getCurrentWorkingDirectory = () => traverse.pwd().data;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      command: '',\n      commands: [],\n      currentPath: getCurrentWorkingDirectory(),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.contentEditable = React.createRef();\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.contentEditable.current.focus();\n    setInterval(() => {\n      this.contentEditable.current.focus();\n    }, 1000);\n  }\n\n  handleChange(evt) {\n    if (/<br>/.test(evt.target.value)) {\n      this.handleEnterPress();\n    }\n    this.setState({ command: evt.target.value });\n  }\n\n  handleEnterPress() {\n    const { command, commands } = this.state;\n    const commandOptions = command.split(' ');\n    let lsresult = [command, getCurrentWorkingDirectory()];\n\n    if (commandOptions[0] === 'clear') {\n      this.setState({\n        commands: [],\n      }, () => {\n        this.setState({\n          command: '',\n          currentPath: getCurrentWorkingDirectory(),\n        });\n      });\n      return null;\n    }\n\n\n    if (commandOptions[0] === 'ls') {\n      lsresult = [traverse.ls(), ...lsresult];\n    } else if (commandOptions[0] === 'pwd') {\n      lsresult = [traverse.pwd(), ...lsresult];\n    } else if (commandOptions[0] === 'cd') {\n      lsresult = [traverse.cd(commandOptions[1]), ...lsresult];\n    } else if (commandOptions[0] === 'help') {\n      lsresult = [{\n        data: 'User Needs Help',\n        success: true,\n        type: 'HELP',\n      }, ...lsresult];\n    }\n\n    this.setState({\n      commands: [...commands, lsresult],\n    }, () => {\n      this.setState({\n        command: '',\n        currentPath: getCurrentWorkingDirectory(),\n      });\n    });\n    return null;\n  }\n\n  renderCommands() {\n    const { commands } = this.state;\n    return commands.map((el, index) => {\n      // const lsresult = Object.keys(traverse.ls()).toString();\n      //cecece\n      return <Message key={index.toString()} command={el} />;\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <WelcomeText />\n        {this.renderCommands()}\n        <React.Fragment>\n\n          <span className=\"shell\"><b>{this.state.currentPath + ' '}$ ></b></span>\n\n          <ContentEditable\n            className=\"test\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            innerRef={this.contentEditable}\n            html={this.state.command} // innerHTML of the editable div\n            disabled={false}       // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            tagName='span' // Use a custom HTML tag (uses a div by default)\n          />\n          <div className=\"cursor\" />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}